{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\src\\\\pages\\\\popups\\\\FinalSelect.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useStores from '@stores/useStores';\nimport { useObserver } from 'mobx-react-lite';\nimport { Box, Button } from '@material-ui/core';\nimport imgLogo from '@assets/images/img_eng_mark.png';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { GridView, LocalDataProvider, ValueType } from 'realgrid';\n\nvar FinalSelect = function FinalSelect(visible4, setVisible4) {\n  var _useStores = useStores(),\n      commonStore = _useStores.commonStore;\n\n  var _useObserver = useObserver(function () {\n    return {\n      $Dim: commonStore.Dim,\n      $setAlert: commonStore.fSetAlert\n    };\n  }),\n      $Dim = _useObserver.$Dim,\n      $setAlert = _useObserver.$setAlert;\n\n  var fAlert = function fAlert() {\n    $setAlert({\n      visible: true,\n      desc: '행을 클릭하세요'\n    });\n    return;\n  };\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      write = _useState2[0],\n      setWrite = _useState2[1];\n\n  var inputHandle = function inputHandle(e) {\n    setWrite(_objectSpread({}, write, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var size = useRef(null);\n  var stgrade = useRef(null); //취소버튼 클릭 시\n\n  var onCancel = function onCancel() {\n    setVisible4(false); // setSubclass('');\n  };\n\n  var provider = useRef(null);\n  var gridView = useRef(null);\n  useEffect(function () {\n    if (visible4) {\n      provider.current = new LocalDataProvider();\n      gridView.current = new GridView('realgrid');\n      gridView.current.setDataSource(provider.current);\n      provider.current.setFields(fields);\n      gridView.current.setColumns(columns);\n      var height = gridView.current.displayOptions.rowHeight;\n      gridView.current.displayOptions.rowHeight = height + 40;\n      gridView.current.displayOptions.selectionStyle = 'rows';\n      gridView.current.columnByName('goodnm').editable = false;\n      gridView.current.columnByName('goodno').editable = false;\n      gridView.current.columnByName('spec').editable = false;\n      gridView.current.setCheckBar({\n        visible: false\n      });\n      gridView.current.setStateBar({\n        visible: false\n      }); //   fCount();\n    }\n  }, [visible4]);\n  if (!visible4) return null;\n  return React.createElement(React.Fragment, null, React.createElement(Box, {\n    style: {\n      position: 'fixed',\n      zIndex: 2000,\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.25)'\n    },\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      height: $Dim * 400,\n      width: $Dim * 250,\n      background: '#fff',\n      borderRadius: '4px',\n      boxShadow: '0px 0px 8px rgba(0, 0, 0, 0.125)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      background: '#e6e6e6',\n      padding: $Dim * 5,\n      borderTopLeftRadius: '4px',\n      borderTopRightRadius: '4px'\n    },\n    display: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgLogo,\n    alt: \"logo\",\n    style: {\n      width: $Dim * 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(Box, {\n    style: {\n      padding: $Dim * 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      marginTop: $Dim * 10,\n      marginBottom: $Dim * 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      height: $Dim * 300,\n      fontSize: $Dim * 10,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"realgrid\",\n    style: {\n      width: '435px',\n      height: '500px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })))), ' ', React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      flexgrow: 0.5,\n      width: $Dim * 100,\n      height: $Dim * 30,\n      backgroundColor: 'red',\n      fontSize: $Dim * 10,\n      color: '#ffffff'\n    },\n    onClick: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\uB2EB\\uAE30\"))))));\n};\n\nvar fields = [{\n  fieldName: 'goodnm',\n  dataType: ValueType.TEXT\n}, {\n  fieldName: 'goodno',\n  dataType: ValueType.TEXT\n}, {\n  fieldName: 'spec',\n  dataType: ValueType.TEXT\n}];\nvar columns = [{\n  name: 'goodnm',\n  fieldName: 'goodnm',\n  type: 'data',\n  width: '100',\n  styles: {\n    textAlignment: 'center'\n  },\n  header: {\n    text: 'goodnm',\n    showTooltip: true,\n    tooltip: '<span style=\"color: red;\">이름</span>'\n  },\n  renderer: {\n    type: 'text',\n    showTooltip: true\n  }\n}, {\n  name: 'goodno',\n  fieldName: 'goodno',\n  type: 'data',\n  width: '100',\n  styles: {\n    textAlignment: 'center'\n  },\n  header: {\n    text: 'goodno',\n    showTooltip: false\n  },\n  numberFormat: '0'\n}, {\n  name: 'spec',\n  fieldName: 'spec',\n  type: 'data',\n  width: '100',\n  styles: {\n    textAlignment: 'center'\n  },\n  header: {\n    text: 'spec',\n    showTooltip: false\n  },\n  numberFormat: '0'\n}];\nexport default FinalSelect;","map":{"version":3,"sources":["C:\\Users\\HSE-KMS\\Documents\\Temp\\frontend\\src\\pages\\popups\\FinalSelect.js"],"names":["React","useState","useEffect","useRef","useStores","useObserver","Box","Button","imgLogo","TextField","axios","GridView","LocalDataProvider","ValueType","FinalSelect","visible4","setVisible4","commonStore","$Dim","Dim","$setAlert","fSetAlert","fAlert","visible","desc","write","setWrite","inputHandle","e","target","name","value","data","setData","size","stgrade","onCancel","provider","gridView","current","setDataSource","setFields","fields","setColumns","columns","height","displayOptions","rowHeight","selectionStyle","columnByName","editable","setCheckBar","setStateBar","position","zIndex","top","left","width","background","borderRadius","boxShadow","padding","borderTopLeftRadius","borderTopRightRadius","marginTop","marginBottom","fontSize","fontWeight","display","justifyContent","flexgrow","backgroundColor","color","fieldName","dataType","TEXT","type","styles","textAlignment","header","text","showTooltip","tooltip","renderer","numberFormat"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport useStores from '@stores/useStores';\r\nimport { useObserver } from 'mobx-react-lite';\r\nimport { Box, Button } from '@material-ui/core';\r\nimport imgLogo from '@assets/images/img_eng_mark.png';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport { GridView, LocalDataProvider, ValueType } from 'realgrid';\r\n\r\nconst FinalSelect = (visible4, setVisible4) => {\r\n  const { commonStore } = useStores();\r\n  const { $Dim, $setAlert } = useObserver(() => ({\r\n    $Dim: commonStore.Dim,\r\n    $setAlert: commonStore.fSetAlert,\r\n  }));\r\n  const fAlert = () => {\r\n    $setAlert({ visible: true, desc: '행을 클릭하세요' });\r\n    return;\r\n  };\r\n  const [write, setWrite] = useState(null);\r\n  const inputHandle = (e) => {\r\n    setWrite({\r\n      ...write,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const [data, setData] = useState();\r\n\r\n  const size = useRef(null);\r\n  const stgrade = useRef(null);\r\n  //취소버튼 클릭 시\r\n  const onCancel = () => {\r\n    setVisible4(false);\r\n    // setSubclass('');\r\n  };\r\n  let provider = useRef(null);\r\n  let gridView = useRef(null);\r\n  useEffect(() => {\r\n    if (visible4) {\r\n      provider.current = new LocalDataProvider();\r\n      gridView.current = new GridView('realgrid');\r\n      gridView.current.setDataSource(provider.current);\r\n      provider.current.setFields(fields);\r\n      gridView.current.setColumns(columns);\r\n      const height = gridView.current.displayOptions.rowHeight;\r\n      gridView.current.displayOptions.rowHeight = height + 40;\r\n      gridView.current.displayOptions.selectionStyle = 'rows';\r\n      gridView.current.columnByName('goodnm').editable = false;\r\n      gridView.current.columnByName('goodno').editable = false;\r\n      gridView.current.columnByName('spec').editable = false;\r\n      gridView.current.setCheckBar({\r\n        visible: false,\r\n      });\r\n      gridView.current.setStateBar({\r\n        visible: false,\r\n      });\r\n    //   fCount();\r\n    }\r\n  }, [visible4]);\r\n\r\n  if (!visible4) return null;\r\n  return (\r\n    <>\r\n      <Box style={{ position: 'fixed', zIndex: 2000, top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0, 0, 0, 0.25)' }} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n        <Box style={{ height: $Dim * 400, width: $Dim * 250, background: '#fff', borderRadius: '4px', boxShadow: '0px 0px 8px rgba(0, 0, 0, 0.125)' }}>\r\n          <Box style={{ background: '#e6e6e6', padding: $Dim * 5, borderTopLeftRadius: '4px', borderTopRightRadius: '4px' }} display=\"flex\">\r\n            <img src={imgLogo} alt=\"logo\" style={{ width: $Dim * 40 }} />\r\n          </Box>\r\n          <Box style={{ padding: $Dim * 8 }}>\r\n            <Box style={{ marginTop: $Dim * 10, marginBottom: $Dim * 20 }}>\r\n              <Box style={{ height: $Dim * 300, fontSize: $Dim * 10, fontWeight: 'bold' }}>\r\n                <Box style={{ display: 'flex', justifyContent: 'center' }}>\r\n                  <div id=\"realgrid\" style={{ width: '435px', height: '500px' }} />\r\n                </Box>\r\n              </Box>\r\n            </Box>{' '}\r\n            {/* 내용부분 */}\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Button variant=\"contained\" style={{ flexgrow: 0.5, width: $Dim * 100, height: $Dim * 30, backgroundColor: 'red', fontSize: $Dim * 10, color: '#ffffff' }} onClick={onCancel}>\r\n                닫기\r\n              </Button>\r\n            </Box>\r\n            {/* 버튼부분 */}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nconst fields = [\r\n    {\r\n      fieldName: 'goodnm',\r\n      dataType: ValueType.TEXT,\r\n    },\r\n    {\r\n      fieldName: 'goodno',\r\n      dataType: ValueType.TEXT,\r\n    },\r\n    {\r\n      fieldName: 'spec',\r\n      dataType: ValueType.TEXT,\r\n    },\r\n  ];\r\n  \r\n  const columns = [\r\n    {\r\n      name: 'goodnm',\r\n      fieldName: 'goodnm',\r\n      type: 'data',\r\n      width: '100',\r\n      styles: {\r\n        textAlignment: 'center',\r\n      },\r\n      header: {\r\n        text: 'goodnm',\r\n        showTooltip: true,\r\n        tooltip: '<span style=\"color: red;\">이름</span>',\r\n      },\r\n      renderer: {\r\n        type: 'text',\r\n        showTooltip: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'goodno',\r\n      fieldName: 'goodno',\r\n      type: 'data',\r\n      width: '100',\r\n      styles: {\r\n        textAlignment: 'center',\r\n      },\r\n      header: {\r\n        text: 'goodno',\r\n        showTooltip: false,\r\n      },\r\n      numberFormat: '0',\r\n    },\r\n    {\r\n      name: 'spec',\r\n      fieldName: 'spec',\r\n      type: 'data',\r\n      width: '100',\r\n      styles: {\r\n        textAlignment: 'center',\r\n      },\r\n      header: {\r\n        text: 'spec',\r\n        showTooltip: false,\r\n      },\r\n      numberFormat: '0',\r\n    },\r\n  ];\r\n\r\nexport default FinalSelect;\r\n"]},"metadata":{},"sourceType":"module"}