{"ast":null,"code":"import SecureStorage from 'secure-web-storage';\nimport CryptoJS from 'crypto-js';\n\nvar SecStorage = function SecStorage(SCK) {\n  var secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SCK);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SCK);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SCK);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    }\n  });\n  return secureStorage;\n};\n\nexport default SecStorage;","map":{"version":3,"sources":["C:\\Users\\HSE-KMS\\Documents\\Temp\\frontend\\src\\lib\\secureStorage.js"],"names":["SecureStorage","CryptoJS","SecStorage","SCK","secureStorage","localStorage","hash","key","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,IAAMC,UAAU,GAAG,SAASA,UAAT,CAAoBC,GAApB,EAAyB;AAC1C,MAAMC,aAAa,GAAG,IAAIJ,aAAJ,CAAkBK,YAAlB,EAAgC;AACpDC,IAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,GAAd,EAAmB;AACvBA,MAAAA,GAAG,GAAGN,QAAQ,CAACO,MAAT,CAAgBD,GAAhB,EAAqBJ,GAArB,CAAN;AACA,aAAOI,GAAG,CAACE,QAAJ,EAAP;AACD,KAJmD;AAKpDC,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,IAAjB,EAAuB;AAC9BA,MAAAA,IAAI,GAAGV,QAAQ,CAACW,GAAT,CAAaF,OAAb,CAAqBC,IAArB,EAA2BR,GAA3B,CAAP;AACAQ,MAAAA,IAAI,GAAGA,IAAI,CAACF,QAAL,EAAP;AACA,aAAOE,IAAP;AACD,KATmD;AAUpDE,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBF,IAAjB,EAAuB;AAC9BA,MAAAA,IAAI,GAAGV,QAAQ,CAACW,GAAT,CAAaC,OAAb,CAAqBF,IAArB,EAA2BR,GAA3B,CAAP;AACAQ,MAAAA,IAAI,GAAGA,IAAI,CAACF,QAAL,CAAcR,QAAQ,CAACa,GAAT,CAAaC,IAA3B,CAAP;AACA,aAAOJ,IAAP;AACD;AAdmD,GAAhC,CAAtB;AAgBA,SAAOP,aAAP;AACD,CAlBD;;AAoBA,eAAeF,UAAf","sourcesContent":["import SecureStorage from 'secure-web-storage';\nimport CryptoJS from 'crypto-js';\n\nconst SecStorage = function SecStorage(SCK) {\n  const secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key) {\n      key = CryptoJS.SHA256(key, SCK);\n      return key.toString();\n    },\n    encrypt: function encrypt(data) {\n      data = CryptoJS.AES.encrypt(data, SCK);\n      data = data.toString();\n      return data;\n    },\n    decrypt: function decrypt(data) {\n      data = CryptoJS.AES.decrypt(data, SCK);\n      data = data.toString(CryptoJS.enc.Utf8);\n      return data;\n    },\n  });\n  return secureStorage;\n};\n\nexport default SecStorage;\n"]},"metadata":{},"sourceType":"module"}