{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\src\\\\pages\\\\popups\\\\GetSearch.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useStores from '@stores/useStores';\nimport { useObserver } from 'mobx-react-lite';\nimport { Box, Button } from '@material-ui/core';\nimport imgLogo from '@assets/images/img_eng_mark.png';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { tr } from 'date-fns/locale';\nimport { GridView, LocalDataProvider } from 'realgrid';\nimport { ValueType } from 'realgrid';\n\nvar GetSearch = function GetSearch(_ref) {\n  var setShowView = _ref.setShowView,\n      setSubclass = _ref.setSubclass,\n      setVisible = _ref.setVisible,\n      visible = _ref.visible;\n\n  var _useStores = useStores(),\n      commonStore = _useStores.commonStore;\n\n  var _useObserver = useObserver(function () {\n    return {\n      $Dim: commonStore.Dim\n    };\n  }),\n      $Dim = _useObserver.$Dim;\n\n  var onCancel = function onCancel() {\n    setVisible(false);\n    setSubclass('');\n  };\n\n  var onConfirm = function onConfirm() {\n    setSubclass(data);\n    setVisible(false);\n    setShowView(true);\n  };\n\n  var provider = useRef(null);\n  var gridView = useRef(null);\n\n  var _useState = useState('%'),\n      _useState2 = _slicedToArray(_useState, 2),\n      write = _useState2[0],\n      setWrite = _useState2[1];\n\n  var inputHandle = function inputHandle(e) {\n    setWrite(_objectSpread({}, write, _defineProperty({}, e.target.name, e.target.value)));\n  }; //리스트\n\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1]; // const data = useRef(null);\n\n\n  var fCount =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('/@/test/select1', {\n                params: {\n                  Minor: '062',\n                  Item1: '061001',\n                  Minornm: '%'\n                }\n              });\n\n            case 3:\n              result = _context.sent;\n              provider.current.setRows(result.data);\n              console.log(1, result.data);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(1, _context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function fCount() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var fCount2 =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.get('/@/test/select1', {\n                params: {\n                  Minor: '062',\n                  Item1: '061001',\n                  Minornm: write.search\n                }\n              });\n\n            case 3:\n              result = _context2.sent;\n              provider.current.setRows(result.data);\n              setWrite('%'); // setData(result.data);\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(1, _context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    return function fCount2() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var fields = [{\n    fieldName: 'Minornm',\n    dataType: ValueType.TEXT\n  }, {\n    fieldName: 'Remark',\n    dataType: ValueType.TEXT\n  }];\n  var columns = [{\n    name: 'Minornm',\n    fieldName: 'Minornm',\n    type: 'data',\n    width: '300',\n    styles: {\n      textAlignment: 'center'\n    },\n    header: {\n      text: '코드명',\n      showTooltip: true,\n      tooltip: '<span style=\"color: red;\">이름</span>'\n    },\n    renderer: {\n      type: 'text',\n      showTooltip: true\n    }\n  }, {\n    name: 'Remark',\n    fieldName: 'Remark',\n    type: 'data',\n    width: '100',\n    styles: {\n      textAlignment: 'center'\n    },\n    header: {\n      text: '품번항목',\n      showTooltip: false\n    },\n    numberFormat: '0'\n  }];\n  useEffect(function () {\n    if (visible) {\n      provider.current = new LocalDataProvider();\n      gridView.current = new GridView('realgrid');\n      gridView.current.setDataSource(provider.current);\n      provider.current.setFields(fields);\n      gridView.current.setColumns(columns);\n      var height = gridView.current.displayOptions.rowHeight;\n      gridView.current.displayOptions.rowHeight = height + 40;\n      gridView.current.displayOptions.selectionStyle = 'rows';\n      gridView.current.columnByName('Minornm').editable = false;\n      gridView.current.columnByName('Remark').editable = false;\n      gridView.current.setCheckBar({\n        visible: false\n      });\n      gridView.current.setStateBar({\n        visible: false\n      });\n      registerCallback();\n    }\n\n    fCount();\n  }, [visible]);\n\n  function registerCallback() {\n    gridView.current.onCellClicked = function (grid, clickData) {\n      setData(gridView.current.getValues(clickData.itemIndex).Minornm);\n      console.log(gridView.current.getValues(clickData.itemIndex).Minornm);\n    };\n  }\n\n  if (!visible) return null;\n  console.log(1111, data);\n  return React.createElement(React.Fragment, null, console.log('여기도 들옴'), React.createElement(Box, {\n    style: {\n      position: 'fixed',\n      zIndex: 2000,\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.25)'\n    },\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      height: $Dim * 400,\n      width: $Dim * 250,\n      background: '#fff',\n      borderRadius: '4px',\n      boxShadow: '0px 0px 8px rgba(0, 0, 0, 0.125)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      background: '#e6e6e6',\n      padding: $Dim * 5,\n      borderTopLeftRadius: '4px',\n      borderTopRightRadius: '4px'\n    },\n    display: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgLogo,\n    alt: \"logo\",\n    style: {\n      width: $Dim * 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), React.createElement(Box, {\n    style: {\n      padding: $Dim * 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      marginTop: $Dim * 10,\n      marginBottom: $Dim * 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      height: $Dim * 300,\n      fontSize: $Dim * 10,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-basic\",\n    name: \"search\",\n    placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    variant: \"outlined\",\n    style: {\n      width: $Dim * 150\n    },\n    onChange: inputHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: function onClick() {\n      fCount2();\n    },\n    variant: \"contained\",\n    style: {\n      marginLeft: $Dim * 15,\n      width: $Dim * 60,\n      height: $Dim * 30,\n      backgroundColor: '#348fe2',\n      fontSize: $Dim * 10,\n      color: '#ffffff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"\\uC870\\uD68C\")), React.createElement(Box, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"realgrid\",\n    style: {\n      width: '435px',\n      height: '500px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })))), ' ', React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      flexgrow: 0.5,\n      width: $Dim * 100,\n      height: $Dim * 30,\n      backgroundColor: 'red',\n      fontSize: $Dim * 10,\n      color: '#ffffff'\n    },\n    onClick: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"\\uB2EB\\uAE30\"), React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      width: $Dim * 100,\n      height: $Dim * 30,\n      backgroundColor: '#348fe2',\n      fontSize: $Dim * 10,\n      color: '#ffffff'\n    },\n    onClick: onConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"\\uD655\\uC778\"))))));\n};\n\nexport default GetSearch;","map":{"version":3,"sources":["C:\\Users\\HSE-KMS\\Documents\\Temp\\frontend\\src\\pages\\popups\\GetSearch.js"],"names":["React","useState","useEffect","useRef","useStores","useObserver","Box","Button","imgLogo","TextField","axios","tr","GridView","LocalDataProvider","ValueType","GetSearch","setShowView","setSubclass","setVisible","visible","commonStore","$Dim","Dim","onCancel","onConfirm","data","provider","gridView","write","setWrite","inputHandle","e","target","name","value","setData","fCount","get","params","Minor","Item1","Minornm","result","current","setRows","console","log","fCount2","search","fields","fieldName","dataType","TEXT","columns","type","width","styles","textAlignment","header","text","showTooltip","tooltip","renderer","numberFormat","setDataSource","setFields","setColumns","height","displayOptions","rowHeight","selectionStyle","columnByName","editable","setCheckBar","setStateBar","registerCallback","onCellClicked","grid","clickData","getValues","itemIndex","position","zIndex","top","left","background","borderRadius","boxShadow","padding","borderTopLeftRadius","borderTopRightRadius","marginTop","marginBottom","fontSize","fontWeight","marginLeft","backgroundColor","color","display","justifyContent","flexgrow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport useStores from '@stores/useStores';\r\nimport { useObserver } from 'mobx-react-lite';\r\nimport { Box, Button } from '@material-ui/core';\r\nimport imgLogo from '@assets/images/img_eng_mark.png';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport { tr } from 'date-fns/locale';\r\nimport { GridView, LocalDataProvider } from 'realgrid';\r\nimport { ValueType } from 'realgrid';\r\n\r\nconst GetSearch = ({setShowView, setSubclass, setVisible, visible }) => {\r\n  const { commonStore } = useStores();\r\n  const { $Dim } = useObserver(() => ({\r\n    $Dim: commonStore.Dim,\r\n  }));\r\n\r\n  const onCancel = () => {\r\n    setVisible(false);\r\n    setSubclass('');\r\n  };\r\n\r\n  const onConfirm = () =>{\r\n    setSubclass(data);\r\n    setVisible(false);\r\n    setShowView(true);\r\n  }\r\n\r\n  let provider = useRef(null);\r\n  let gridView = useRef(null);\r\n  const [write, setWrite] = useState('%');\r\n  const inputHandle = (e) => {\r\n    setWrite({\r\n      ...write,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //리스트\r\n  const [data, setData] = useState();\r\n  // const data = useRef(null);\r\n  const fCount = async () => {\r\n    try {\r\n      let result = await axios.get('/@/test/select1', {\r\n        params: { Minor: '062', Item1: '061001', Minornm: '%' },\r\n      });\r\n      provider.current.setRows(result.data);\r\n      console.log(1, result.data);\r\n    } catch (error) {\r\n      console.log(1, error);\r\n    }\r\n  };\r\n  const fCount2 = async () => {\r\n    try {\r\n      let result = await axios.get('/@/test/select1', {\r\n        params: { Minor: '062', Item1: '061001', Minornm: write.search },\r\n      });\r\n      provider.current.setRows(result.data);\r\n      setWrite('%');\r\n      // setData(result.data);\r\n    } catch (error) {\r\n      console.log(1, error);\r\n    }\r\n  };\r\n  const fields = [\r\n    {\r\n      fieldName: 'Minornm',\r\n      dataType: ValueType.TEXT,\r\n    },\r\n    {\r\n      fieldName: 'Remark',\r\n      dataType: ValueType.TEXT,\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Minornm',\r\n      fieldName: 'Minornm',\r\n      type: 'data',\r\n      width: '300',\r\n      styles: {\r\n        textAlignment: 'center',\r\n      },\r\n      header: {\r\n        text: '코드명',\r\n        showTooltip: true,\r\n        tooltip: '<span style=\"color: red;\">이름</span>',\r\n      },\r\n      renderer: {\r\n        type: 'text',\r\n        showTooltip: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'Remark',\r\n      fieldName: 'Remark',\r\n      type: 'data',\r\n      width: '100',\r\n      styles: {\r\n        textAlignment: 'center',\r\n      },\r\n      header: {\r\n        text: '품번항목',\r\n        showTooltip: false,\r\n      },\r\n      numberFormat: '0',\r\n    },\r\n  ];\r\n\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      provider.current = new LocalDataProvider();\r\n      gridView.current = new GridView('realgrid');\r\n      gridView.current.setDataSource(provider.current);\r\n      provider.current.setFields(fields);\r\n      gridView.current.setColumns(columns);\r\n      const height = gridView.current.displayOptions.rowHeight;\r\n      gridView.current.displayOptions.rowHeight = height + 40;\r\n      gridView.current.displayOptions.selectionStyle = 'rows';\r\n      gridView.current.columnByName('Minornm').editable = false;\r\n      gridView.current.columnByName('Remark').editable = false;\r\n      gridView.current.setCheckBar({\r\n        visible: false,\r\n      });\r\n      gridView.current.setStateBar({\r\n        visible: false,\r\n      });\r\n      registerCallback();\r\n    }\r\n    fCount();\r\n  }, [visible]);\r\n\r\n  function registerCallback() {\r\n    gridView.current.onCellClicked = function (grid, clickData) {\r\n      setData(gridView.current.getValues(clickData.itemIndex).Minornm);\r\n      console.log(gridView.current.getValues(clickData.itemIndex).Minornm);\r\n    };\r\n  }\r\n  if (!visible) return null;\r\n  console.log(1111,data)\r\n  return (\r\n    <>\r\n      {console.log('여기도 들옴')}\r\n      <Box style={{ position: 'fixed', zIndex: 2000, top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0, 0, 0, 0.25)' }} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n        <Box style={{ height: $Dim * 400, width: $Dim * 250, background: '#fff', borderRadius: '4px', boxShadow: '0px 0px 8px rgba(0, 0, 0, 0.125)' }}>\r\n          <Box style={{ background: '#e6e6e6', padding: $Dim * 5, borderTopLeftRadius: '4px', borderTopRightRadius: '4px' }} display=\"flex\">\r\n            <img src={imgLogo} alt=\"logo\" style={{ width: $Dim * 40 }} />\r\n          </Box>\r\n          <Box style={{ padding: $Dim * 8 }}>\r\n            <Box style={{ marginTop: $Dim * 10, marginBottom: $Dim * 20 }}>\r\n              <Box style={{ height: $Dim * 300, fontSize: $Dim * 10, fontWeight: 'bold' }}>\r\n                <Box>\r\n                  <TextField id=\"outlined-basic\" name=\"search\" placeholder=\"검색어를 입력하세요\" variant=\"outlined\" style={{ width: $Dim * 150 }} onChange={inputHandle} />\r\n                  <Button\r\n                    onClick={() => {\r\n                      fCount2();\r\n                    }}\r\n                    variant=\"contained\"\r\n                    style={{ marginLeft: $Dim * 15, width: $Dim * 60, height: $Dim * 30, backgroundColor: '#348fe2', fontSize: $Dim * 10, color: '#ffffff' }}\r\n                  >\r\n                    조회\r\n                  </Button>\r\n                </Box>\r\n                <Box style={{ display: 'flex', justifyContent: 'center' }}>\r\n                  <div id=\"realgrid\" style={{ width: '435px', height: '500px' }} />\r\n                  {/* <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>코드명</th>\r\n                        <th>품번항목</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {data.current.map((da, index) => (\r\n                        <tr key={index}>\r\n                          <td>{da.Minornm}</td>\r\n                          <td>{da.Remark}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table> */}\r\n                </Box>\r\n              </Box>\r\n            </Box>{' '}\r\n            {/* 내용부분 */}\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Button variant=\"contained\" style={{ flexgrow: 0.5, width: $Dim * 100, height: $Dim * 30, backgroundColor: 'red', fontSize: $Dim * 10, color: '#ffffff' }} onClick={onCancel}>\r\n                닫기\r\n              </Button>\r\n\r\n              <Button variant=\"contained\" style={{ width: $Dim * 100, height: $Dim * 30, backgroundColor: '#348fe2', fontSize: $Dim * 10, color: '#ffffff' }} onClick={onConfirm}>\r\n                확인\r\n              </Button>\r\n            </Box>\r\n            {/* 버튼부분 */}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GetSearch;\r\n"]},"metadata":{},"sourceType":"module"}