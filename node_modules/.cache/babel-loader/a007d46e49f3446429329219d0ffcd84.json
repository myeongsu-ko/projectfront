{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\src\\\\pages\\\\popups\\\\FinalSelect.js\";\nimport React, { useEffect, useRef } from 'react';\nimport useStores from '@stores/useStores';\nimport { useObserver } from 'mobx-react-lite';\nimport { Box, Button } from '@material-ui/core';\nimport imgLogo from '@assets/images/img_eng_mark.png';\nimport { GridView, LocalDataProvider, ValueType } from 'realgrid';\nimport axios from 'axios';\nimport Typography from '@material-ui/core/Typography';\n\nvar FinalSelect = function FinalSelect(_ref) {\n  var testArr2 = _ref.testArr2,\n      visible4 = _ref.visible4,\n      setVisible4 = _ref.setVisible4;\n\n  var _useStores = useStores(),\n      commonStore = _useStores.commonStore;\n\n  var _useObserver = useObserver(function () {\n    return {\n      $Dim: commonStore.Dim,\n      $setAlert: commonStore.fSetAlert\n    };\n  }),\n      $Dim = _useObserver.$Dim;\n\n  var onCancel = function onCancel() {\n    setVisible4(false); // setSubclass('');\n  };\n\n  var provider = useRef(null);\n  var gridView = useRef(null);\n\n  var fCount =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('/@/test/finalSelect', {\n                params: {\n                  subclass: testArr2.subclass !== null ? testArr2.subclass.Minorcd : '',\n                  stgrade: testArr2.stgrade !== null ? testArr2.stgrade.Minorcd : '',\n                  part: testArr2.part !== null ? testArr2.part.Minorcd : '',\n                  type: testArr2.type !== null ? testArr2.type.Minorcd : '',\n                  seat: testArr2.seat !== null ? testArr2.seat.Minorcd : '',\n                  stem: testArr2.stem !== null ? testArr2.stem.Minorcd : '',\n                  disc: testArr2.disc !== null ? testArr2.disc.Minorcd : '',\n                  special: testArr2.special !== null ? testArr2.special.Minorcd : '',\n                  rating: testArr2.rating !== null ? testArr2.rating.Minorcd : '',\n                  bore: testArr2.bore !== null ? testArr2.bore.Minorcd : '',\n                  size: testArr2.size !== null ? testArr2.size.Minorcd : '',\n                  end: testArr2.end !== null ? testArr2.end.Minorcd : '',\n                  body: testArr2.body !== null ? testArr2.body.Minorcd : ''\n                }\n              });\n\n            case 3:\n              result = _context.sent;\n              provider.current.setRows(result.data);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(1, _context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function fCount() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (visible4) {\n      provider.current = new LocalDataProvider();\n      gridView.current = new GridView('realgrid');\n      gridView.current.setDataSource(provider.current);\n      provider.current.setFields(fields);\n      gridView.current.setColumns(columns);\n      var height = gridView.current.displayOptions.rowHeight;\n      gridView.current.displayOptions.rowHeight = height + 70;\n      gridView.current.displayOptions.selectionStyle = 'rows';\n      gridView.current.columnByName('goodno').editable = false;\n      gridView.current.setRowIndicator({\n        visible: false\n      });\n      gridView.current.setCheckBar({\n        visible: false\n      });\n      gridView.current.setStateBar({\n        visible: false\n      });\n      fCount();\n    }\n  }, [visible4]);\n  if (!visible4) return null;\n  return React.createElement(React.Fragment, null, React.createElement(Box, {\n    style: {\n      position: 'fixed',\n      zIndex: 2000,\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.25)'\n    },\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      height: $Dim * 200,\n      width: $Dim * 250,\n      background: '#fff',\n      borderRadius: '4px',\n      boxShadow: '0px 0px 8px rgba(0, 0, 0, 0.125)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      background: '#e6e6e6',\n      padding: $Dim * 5,\n      borderTopLeftRadius: '4px',\n      borderTopRightRadius: '4px'\n    },\n    display: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgLogo,\n    alt: \"logo\",\n    style: {\n      width: $Dim * 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(Box, {\n    style: {\n      padding: $Dim * 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      marginTop: $Dim * 10,\n      marginBottom: $Dim * 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      height: $Dim * 100,\n      fontSize: $Dim * 10,\n      fontWeight: 'bold',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    style: {\n      marginTop: -10,\n      marginBottom: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"\\uD488\\uBC88\\uD655\\uC778\")), React.createElement(Box, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"realgrid\",\n    style: {\n      width: '435px',\n      height: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })))), ' ', React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    style: {\n      marginTop: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      width: $Dim * 100,\n      height: $Dim * 30,\n      backgroundColor: 'red',\n      fontSize: $Dim * 10,\n      color: '#ffffff'\n    },\n    onClick: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"\\uB2EB\\uAE30\"))))));\n};\n\nvar fields = [{\n  fieldName: 'goodno',\n  dataType: ValueType.TEXT\n}];\nvar columns = [{\n  name: 'goodno',\n  fieldName: 'goodno',\n  type: 'data',\n  width: '435',\n  styles: {\n    textAlignment: 'center'\n  },\n  header: {\n    text: '품번확인',\n    showTooltip: false\n  },\n  numberFormat: '0'\n}];\nexport default FinalSelect;","map":{"version":3,"sources":["C:\\Users\\HSE-KMS\\Documents\\Temp\\frontend\\src\\pages\\popups\\FinalSelect.js"],"names":["React","useEffect","useRef","useStores","useObserver","Box","Button","imgLogo","GridView","LocalDataProvider","ValueType","axios","Typography","FinalSelect","testArr2","visible4","setVisible4","commonStore","$Dim","Dim","$setAlert","fSetAlert","onCancel","provider","gridView","fCount","get","params","subclass","Minorcd","stgrade","part","type","seat","stem","disc","special","rating","bore","size","end","body","result","current","setRows","data","console","log","setDataSource","setFields","fields","setColumns","columns","height","displayOptions","rowHeight","selectionStyle","columnByName","editable","setRowIndicator","visible","setCheckBar","setStateBar","position","zIndex","top","left","width","background","borderRadius","boxShadow","padding","borderTopLeftRadius","borderTopRightRadius","marginTop","marginBottom","fontSize","fontWeight","justifyContent","display","backgroundColor","color","fieldName","dataType","TEXT","name","styles","textAlignment","header","text","showTooltip","numberFormat"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport useStores from '@stores/useStores';\r\nimport { useObserver } from 'mobx-react-lite';\r\nimport { Box, Button } from '@material-ui/core';\r\nimport imgLogo from '@assets/images/img_eng_mark.png';\r\nimport { GridView, LocalDataProvider, ValueType } from 'realgrid';\r\nimport axios from 'axios';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst FinalSelect = ({ testArr2, visible4, setVisible4 }) => {\r\n  const { commonStore } = useStores();\r\n  const { $Dim } = useObserver(() => ({\r\n    $Dim: commonStore.Dim,\r\n    $setAlert: commonStore.fSetAlert,\r\n  }));\r\n\r\n  const onCancel = () => {\r\n    setVisible4(false);\r\n    // setSubclass('');\r\n  };\r\n  let provider = useRef(null);\r\n  let gridView = useRef(null);\r\n\r\n  const fCount = async () => {\r\n    try {\r\n      let result = await axios.get('/@/test/finalSelect', {\r\n        params: {\r\n          subclass: testArr2.subclass !== null ? testArr2.subclass.Minorcd : '',\r\n          stgrade: testArr2.stgrade !== null ? testArr2.stgrade.Minorcd : '',\r\n          part: testArr2.part !== null ? testArr2.part.Minorcd : '',\r\n          type: testArr2.type !== null ? testArr2.type.Minorcd : '',\r\n          seat: testArr2.seat !== null ? testArr2.seat.Minorcd : '',\r\n          stem: testArr2.stem !== null ? testArr2.stem.Minorcd : '',\r\n          disc: testArr2.disc !== null ? testArr2.disc.Minorcd : '',\r\n          special: testArr2.special !== null ? testArr2.special.Minorcd : '',\r\n          rating: testArr2.rating !== null ? testArr2.rating.Minorcd : '',\r\n          bore: testArr2.bore !== null ? testArr2.bore.Minorcd : '',\r\n          size: testArr2.size !== null ? testArr2.size.Minorcd : '',\r\n          end: testArr2.end !== null ? testArr2.end.Minorcd : '',\r\n          body: testArr2.body !== null ? testArr2.body.Minorcd : '',\r\n        },\r\n      });\r\n      provider.current.setRows(result.data);\r\n    } catch (error) {\r\n      console.log(1, error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (visible4) {\r\n      provider.current = new LocalDataProvider();\r\n      gridView.current = new GridView('realgrid');\r\n      gridView.current.setDataSource(provider.current);\r\n      provider.current.setFields(fields);\r\n      gridView.current.setColumns(columns);\r\n      const height = gridView.current.displayOptions.rowHeight;\r\n      gridView.current.displayOptions.rowHeight = height + 70;\r\n      gridView.current.displayOptions.selectionStyle = 'rows';\r\n      gridView.current.columnByName('goodno').editable = false;\r\n      gridView.current.setRowIndicator({\r\n        visible: false,\r\n      });\r\n      gridView.current.setCheckBar({\r\n        visible: false,\r\n      });\r\n      gridView.current.setStateBar({\r\n        visible: false,\r\n      });\r\n      fCount();\r\n    }\r\n  }, [visible4]);\r\n\r\n  if (!visible4) return null;\r\n  return (\r\n    <>\r\n      <Box style={{ position: 'fixed', zIndex: 2000, top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0, 0, 0, 0.25)' }} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n        <Box style={{ height: $Dim * 200, width: $Dim * 250, background: '#fff', borderRadius: '4px', boxShadow: '0px 0px 8px rgba(0, 0, 0, 0.125)' }}>\r\n          <Box style={{ background: '#e6e6e6', padding: $Dim * 5, borderTopLeftRadius: '4px', borderTopRightRadius: '4px' }} display=\"flex\">\r\n            <img src={imgLogo} alt=\"logo\" style={{ width: $Dim * 40 }} />\r\n          </Box>\r\n          <Box style={{ padding: $Dim * 8 }}>\r\n            <Box style={{ marginTop: $Dim * 10, marginBottom: $Dim * 5 }}>\r\n              <Box style={{ height: $Dim * 100, fontSize: $Dim * 10, fontWeight: 'bold', justifyContent: 'center' }}>\r\n                <Box display=\"flex\" justifyContent=\"center\" style={{ marginTop: -10, marginBottom: 5 }}>\r\n                  <Typography variant=\"h4\">품번확인</Typography>\r\n                </Box>\r\n                <Box style={{ display: 'flex', justifyContent: 'center' }}>\r\n                  <div id=\"realgrid\" style={{ width: '435px', height: '150px' }} />\r\n                </Box>\r\n              </Box>\r\n            </Box>{' '}\r\n            {/* 내용부분 */}\r\n            <Box display=\"flex\" justifyContent=\"center\" style={{ marginTop: 40 }}>\r\n              <Button variant=\"contained\" style={{ width: $Dim * 100, height: $Dim * 30, backgroundColor: 'red', fontSize: $Dim * 10, color: '#ffffff' }} onClick={onCancel}>\r\n                닫기\r\n              </Button>\r\n            </Box>\r\n            {/* 버튼부분 */}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nconst fields = [\r\n  {\r\n    fieldName: 'goodno',\r\n    dataType: ValueType.TEXT,\r\n  },\r\n];\r\n\r\nconst columns = [\r\n  {\r\n    name: 'goodno',\r\n    fieldName: 'goodno',\r\n    type: 'data',\r\n    width: '435',\r\n    styles: {\r\n      textAlignment: 'center',\r\n    },\r\n    header: {\r\n      text: '품번확인',\r\n      showTooltip: false,\r\n    },\r\n    numberFormat: '0',\r\n  },\r\n];\r\n\r\nexport default FinalSelect;\r\n"]},"metadata":{},"sourceType":"module"}