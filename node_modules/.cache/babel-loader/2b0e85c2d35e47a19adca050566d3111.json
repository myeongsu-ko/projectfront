{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\src\\\\pages\\\\main\\\\Start.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Box, Button } from '@material-ui/core'; //Button\n\nimport useStores from '@stores/useStores';\nimport { useObserver } from 'mobx-react-lite';\nimport { withRouter } from 'react-router-dom';\nimport { TreeView, LocalTreeDataProvider } from 'realgrid';\nimport { columns, fields, rows } from './realgrid-data';\nimport axios from 'axios';\nimport { sortedLastIndexOf } from 'lodash';\nimport { ajaxTransport, map } from 'jquery';\n\nvar Start = function Start() {\n  var _useStores = useStores(),\n      commonStore = _useStores.commonStore;\n\n  var _useObserver = useObserver(function () {\n    return {\n      $Dim: commonStore.Dim,\n      $setAlert: commonStore.fSetAlert // $Confirm: commonStore.Confirm,\n      // $setConfirm: commonStore.fSetConfirm,\n      // $setConfirmFunc: commonStore.fSetConfirmFunc,\n\n    };\n  }),\n      $Dim = _useObserver.$Dim,\n      $setAlert = _useObserver.$setAlert;\n\n  var Styles = fStyles($Dim); // const [table1,setTable1] = useState([])\n\n  var table1 = [];\n  var table2 = [];\n  var table3 = []; // const fCount = async () => {\n  //   try {\n  //     let result = await axios.get('/@/test/MinorList');\n  //     let result2 = await axios.get('/@/test/MinorByCount')\n  //     // (result2.data).map((setting)=>{\n  //     // })\n  //     table2 = result2.data\n  //     table1 = (result.data).concat(result2.data)\n  //     console.log(table1)\n  //     // console.log(table1)\n  //     treeProvider.current.setRows(table1,'Minor',false);\n  //   } catch (error) {\n  //     if (error.response.status === 404) {\n  //       $setAlert({ visible: true, desc: '해당 코드가 없습니다.' });\n  //     } else {\n  //       $setAlert({ visible: true, desc: '조회중 오류가 발생하였습니다.' });\n  //     }\n  //   }\n  // };\n\n  var treeProvider = useRef(null);\n  var treeView = useRef(null); //   const [format,setFormat]= useState(false); //값이 변경되었을 때 화면을 다시 그리기 위함\n\n  useEffect(function () {\n    treeView.current === null && (treeProvider.current = new LocalTreeDataProvider());\n    treeView.current === null && (treeView.current = new TreeView(\"realgrid\"));\n    treeView.current.setDataSource(treeProvider.current);\n    treeProvider.current.setFields(fields);\n    treeView.current.setColumns(columns);\n    treeView.current.setCheckBar({\n      visible: false\n    });\n    treeView.current.setEditOptions({\n      insertable: true,\n      appendable: true,\n      updatable: true,\n      deletable: true,\n      //CRUD 하기 위한 작업들\n      softDeleting: true\n    }); // setFormat(false);\n\n    console.log(\"여기 들옴\");\n    treeView.current.cancel(); //수정하고 저장할때 오류를 막기 위함\n\n    axios.get('/@/test/MinorByCount').then(function (res) {\n      table1 = res.data;\n      console.log(1, table1);\n      table1.map(function (setting) {\n        axios.get('/@/test/selectByMinorList', {\n          params: {\n            'Minor': setting.Minor\n          }\n        }).then(function (res) {\n          table3 = res.data; // console.log(table2)\n        });\n        console.log(1, table3);\n      }); // treeProvider.current.setRows(res.data,'Minor');\n\n      console.log('요기들옴');\n    }); // fCount();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Box, {\n    style: Styles.s1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      width: $Dim * 500,\n      height: $Dim * 200,\n      marginTop: $Dim * 20\n    },\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"realgrid\",\n    style: Styles.s2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"\\uC2E0\\uADDC\\uD56D\\uBAA9\"), React.createElement(Button, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"\\uCF54\\uB4DC\\uCD94\\uAC00\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"\\uC800\\uC7A5\"))))));\n};\n\nvar fStyles = function fStyles($Dim) {\n  return {\n    s1: {\n      width: $Dim * 1000,\n      height: $Dim * 550,\n      background: '#fff'\n    },\n    s2: {\n      width: $Dim * 500,\n      height: $Dim * 200,\n      marginTop: $Dim * 30\n    }\n  };\n};\n\nexport default withRouter(Start);","map":{"version":3,"sources":["C:\\Users\\HSE-KMS\\Documents\\Temp\\frontend\\src\\pages\\main\\Start.js"],"names":["React","useRef","useState","useEffect","Box","Button","useStores","useObserver","withRouter","TreeView","LocalTreeDataProvider","columns","fields","rows","axios","sortedLastIndexOf","ajaxTransport","map","Start","commonStore","$Dim","Dim","$setAlert","fSetAlert","Styles","fStyles","table1","table2","table3","treeProvider","treeView","current","setDataSource","setFields","setColumns","setCheckBar","visible","setEditOptions","insertable","appendable","updatable","deletable","softDeleting","console","log","cancel","get","then","res","data","setting","params","Minor","s1","width","height","marginTop","s2","display","justifyContent","background"],"mappings":"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","sourcesContent":["import React,{useRef,useState,useEffect} from 'react';\r\nimport { Box,Button } from '@material-ui/core'; //Button\r\nimport useStores from '@stores/useStores';\r\nimport { useObserver } from 'mobx-react-lite';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { TreeView, LocalTreeDataProvider } from 'realgrid';\r\nimport { columns, fields,rows } from './realgrid-data';\r\nimport axios from 'axios';\r\nimport { sortedLastIndexOf } from 'lodash';\r\nimport { ajaxTransport, map } from 'jquery';\r\n\r\nconst Start = () => {\r\n\r\n\r\n    const { commonStore } = useStores();\r\n    const {$Dim,$setAlert} = useObserver(() => ({\r\n        $Dim: commonStore.Dim,\r\n        $setAlert: commonStore.fSetAlert,\r\n        // $Confirm: commonStore.Confirm,\r\n        // $setConfirm: commonStore.fSetConfirm,\r\n        // $setConfirmFunc: commonStore.fSetConfirmFunc,\r\n      }));\r\n\r\n      const Styles = fStyles($Dim);\r\n\r\n      // const [table1,setTable1] = useState([])\r\n      let table1 = [];\r\n      let table2 = [];\r\n      let table3 = [];\r\n      // const fCount = async () => {\r\n      //   try {\r\n      //     let result = await axios.get('/@/test/MinorList');\r\n      //     let result2 = await axios.get('/@/test/MinorByCount')\r\n      //     // (result2.data).map((setting)=>{\r\n            \r\n      //     // })\r\n          \r\n      //     table2 = result2.data\r\n      //     table1 = (result.data).concat(result2.data)\r\n      //     console.log(table1)\r\n      //     // console.log(table1)\r\n      //     treeProvider.current.setRows(table1,'Minor',false);\r\n\r\n      //   } catch (error) {\r\n      //     if (error.response.status === 404) {\r\n      //       $setAlert({ visible: true, desc: '해당 코드가 없습니다.' });\r\n      //     } else {\r\n      //       $setAlert({ visible: true, desc: '조회중 오류가 발생하였습니다.' });\r\n      //     }\r\n      //   }\r\n      // };\r\n\r\n      let treeProvider  = useRef(null);\r\n      let treeView  = useRef(null);\r\n    //   const [format,setFormat]= useState(false); //값이 변경되었을 때 화면을 다시 그리기 위함\r\n      useEffect(()=>{\r\n        (treeView.current === null) && (treeProvider.current = new LocalTreeDataProvider());\r\n        (treeView.current === null) && (treeView.current = new TreeView(\"realgrid\"));\r\n        treeView.current.setDataSource(treeProvider.current);\r\n        treeProvider.current.setFields(fields); \r\n        treeView.current.setColumns(columns);\r\n        treeView.current.setCheckBar({\r\n            visible: false\r\n          });\r\n          treeView.current.setEditOptions({\r\n          insertable: true,\r\n          appendable: true,\r\n          updatable: true,\r\n          deletable: true, //CRUD 하기 위한 작업들\r\n          softDeleting: true,\r\n        });\r\n        // setFormat(false);\r\n        console.log(\"여기 들옴\")\r\n\r\n        treeView.current.cancel(); //수정하고 저장할때 오류를 막기 위함\r\n        axios.get('/@/test/MinorByCount')\r\n        .then(res =>{\r\n          table1 = res.data\r\n          console.log(1,table1)\r\n          table1.map((setting)=>{\r\n            axios.get('/@/test/selectByMinorList',{params:{'Minor':setting.Minor}})\r\n            .then(res=>{\r\n              table3 = res.data\r\n              // console.log(table2)\r\n            })\r\n            console.log(1,table3)\r\n          })\r\n          // treeProvider.current.setRows(res.data,'Minor');\r\n          console.log('요기들옴')\r\n        })\r\n        // fCount();\r\n      },[])\r\n\r\n\r\n     \r\n      \r\n\r\n\r\n    return (\r\n        <>  \r\n      <Box style={Styles.s1} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n        <Box style={{ width: $Dim * 500, height: $Dim * 200, marginTop: $Dim * 20 }} display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        <button></button>\r\n        <div id=\"realgrid\" style={Styles.s2}></div>\r\n        <div style={{display:'flex'}}>\r\n        <div style={{justifyContent:'flex-start'}}>\r\n        <Button variant=\"contained\">신규항목</Button>\r\n        <Button variant=\"contained\">코드추가</Button>\r\n        </div>\r\n        <div>\r\n        <Button variant=\"contained\">저장</Button>\r\n        </div>\r\n        </div>\r\n        </Box>\r\n      </Box>\r\n        </> \r\n    );\r\n};\r\n\r\nconst fStyles = ($Dim) => {\r\n    return {\r\n      s1: { width: $Dim * 1000, height: $Dim * 550, background: '#fff' },\r\n      s2: { width: $Dim * 500, height: $Dim * 200, marginTop: $Dim * 30},\r\n    };\r\n  };\r\n\r\nexport default withRouter(Start);"]},"metadata":{},"sourceType":"module"}