{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\temp\\\\frontend\\\\src\\\\pages\\\\layout\\\\LoginLayout.js\";\nimport React from 'react';\nimport useStores from '@stores/useStores';\nimport { useObserver } from 'mobx-react-lite';\nimport { Route } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport Interceptor from '@components/common/Interceptor';\nimport Loading from '@components/common/Loading';\n\nvar LoginLayout = function LoginLayout() {\n  var _useStores = useStores(),\n      routeStore = _useStores.routeStore,\n      commonStore = _useStores.commonStore;\n\n  var _useObserver = useObserver(function () {\n    return {\n      $routes: routeStore.routes,\n      $Loading: commonStore.Loading\n    };\n  }),\n      $routes = _useObserver.$routes,\n      $Loading = _useObserver.$Loading;\n\n  return React.createElement(React.Fragment, null, React.createElement(Helmet, {\n    title: \"HanSun\",\n    meta: [{\n      name: 'viewport',\n      content: 'width=device-width, initial-scale=1.0'\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Interceptor, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Loading, {\n    isActive: $Loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), $routes.map(function (route, index) {\n    return React.createElement(Route, {\n      key: index,\n      path: route.path,\n      exact: route.exact,\n      component: route.component,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default LoginLayout;","map":{"version":3,"sources":["C:\\Users\\HSE-KMS\\Documents\\temp\\frontend\\src\\pages\\layout\\LoginLayout.js"],"names":["React","useStores","useObserver","Route","Helmet","Interceptor","Loading","LoginLayout","routeStore","commonStore","$routes","routes","$Loading","name","content","map","route","index","path","exact","component"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,mBACYN,SAAS,EADrB;AAAA,MAChBO,UADgB,cAChBA,UADgB;AAAA,MACJC,WADI,cACJA,WADI;;AAAA,qBAEMP,WAAW,CAAC;AAAA,WAAO;AAC/CQ,MAAAA,OAAO,EAAEF,UAAU,CAACG,MAD2B;AAE/CC,MAAAA,QAAQ,EAAEH,WAAW,CAACH;AAFyB,KAAP;AAAA,GAAD,CAFjB;AAAA,MAEhBI,OAFgB,gBAEhBA,OAFgB;AAAA,MAEPE,QAFO,gBAEPA,QAFO;;AAOxB,SACE,0CACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,IAAI,EAAE,CACJ;AACEC,MAAAA,IAAI,EAAE,UADR;AAEEC,MAAAA,OAAO,EAAE;AAFX,KADI,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAYE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEF,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAcGF,OAAO,CAACK,GAAR,CAAY,UAACC,KAAD,EAAQC,KAAR;AAAA,WACX,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAZ;AAAmB,MAAA,IAAI,EAAED,KAAK,CAACE,IAA/B;AAAqC,MAAA,KAAK,EAAEF,KAAK,CAACG,KAAlD;AAAyD,MAAA,SAAS,EAAEH,KAAK,CAACI,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW;AAAA,GAAZ,CAdH,CADF;AAoBD,CA3BD;;AA4BA,eAAeb,WAAf","sourcesContent":["import React from 'react';\nimport useStores from '@stores/useStores';\nimport { useObserver } from 'mobx-react-lite';\nimport { Route } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport Interceptor from '@components/common/Interceptor';\nimport Loading from '@components/common/Loading';\n\nconst LoginLayout = () => {\n  const { routeStore, commonStore } = useStores();\n  const { $routes, $Loading } = useObserver(() => ({\n    $routes: routeStore.routes,\n    $Loading: commonStore.Loading,\n  }));\n\n  return (\n    <>\n      <Helmet\n        title=\"HanSun\"\n        meta={[\n          {\n            name: 'viewport',\n            content: 'width=device-width, initial-scale=1.0',\n          },\n        ]}\n      />\n\n      <Interceptor />\n      <Loading isActive={$Loading} />\n      {/* 라우터를 불러와서 map으로 뿌린다 근데..?? */}\n      {$routes.map((route, index) => (\n        <Route key={index} path={route.path} exact={route.exact} component={route.component} />\n      ))}\n    </>\n  );\n};\nexport default LoginLayout;\n"]},"metadata":{},"sourceType":"module"}