{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\src\\\\components\\\\common\\\\Order.js\";\nimport React from 'react';\n\nvar Order = function Order() {\n  var _useStores = useStores(),\n      commonStore = _useStores.commonStore;\n\n  var _useObserver = useObserver(function () {\n    return {\n      $Dim: commonStore.Dim,\n      $setAlert: commonStore.fSetAlert,\n      $Confirm: commonStore.Confirm,\n      $setConfirm: commonStore.fSetConfirm,\n      $setConfirmFunc: commonStore.fSetConfirmFunc\n    };\n  }),\n      $Dim = _useObserver.$Dim,\n      $setAlert = _useObserver.$setAlert,\n      $Confirm = _useObserver.$Confirm,\n      $setConfirm = _useObserver.$setConfirm,\n      $setConfirmFunc = _useObserver.$setConfirmFunc;\n\n  var Styles = fStyles($Dim);\n\n  var fAlert = function fAlert() {\n    $setAlert({\n      visible: true,\n      desc: 'Alert 테스트'\n    });\n    return;\n  };\n\n  var fData =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('/@/test/selectByMinorList', {\n                params: {\n                  Minor: '100'\n                }\n              });\n\n            case 3:\n              result = _context.sent;\n              console.log(result.data); // const result2 = await axios.post(`/@/stocklist/updateByStockMove`, {\n              //   data: {aa: 11, bb: 22},\n              // });\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n              if (_context.t0.response.status === 404) {\n                $setAlert({\n                  visible: true,\n                  desc: '해당 코드가 없습니다.'\n                });\n              } else {\n                $setAlert({\n                  visible: true,\n                  desc: '조회중 오류가 발생하였습니다.'\n                });\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function fData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fConfirm = function fConfirm() {\n    $setConfirm({\n      visible: true,\n      desc: '납품자료를 저장 하시겠습니까?',\n      id: 'save'\n    });\n  };\n\n  var fConfirmFunc =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              $setConfirmFunc(\n              /*#__PURE__*/\n              _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee2() {\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        $setConfirm({\n                          visible: false,\n                          desc: '',\n                          id: ''\n                        });\n\n                        if ($Confirm.id === 'save') {\n                          console.log('저장완료');\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              })));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function fConfirmFunc() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    console.log('여기 실행됨');\n    fConfirmFunc();\n  }, [$Confirm]);\n  return React.createElement(React.Fragment, null, React.createElement(Box, {\n    style: Styles.s1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      width: $Dim * 500,\n      height: $Dim * 200,\n      marginTop: $Dim * 20\n    },\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      width: $Dim * 300,\n      height: $Dim * 70,\n      fontSize: $Dim * 25,\n      backgroundColor: '#323232',\n      color: '#ffffff',\n      marginTop: $Dim * 20\n    },\n    onClick: fAlert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Alert\"), React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      width: $Dim * 300,\n      height: $Dim * 70,\n      marginTop: $Dim * 10,\n      fontSize: $Dim * 25,\n      backgroundColor: '#323232',\n      color: '#ffffff'\n    },\n    onClick: fConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Confirm\"), React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      width: $Dim * 300,\n      height: $Dim * 70,\n      marginTop: $Dim * 10,\n      fontSize: $Dim * 25,\n      backgroundColor: '#323232',\n      color: '#ffffff'\n    },\n    onClick: fData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"DATA\"))));\n};\n\nexport default Order;","map":{"version":3,"sources":["C:\\Users\\HSE-KMS\\Documents\\Temp\\frontend\\src\\components\\common\\Order.js"],"names":["React","Order","useStores","commonStore","useObserver","$Dim","Dim","$setAlert","fSetAlert","$Confirm","Confirm","$setConfirm","fSetConfirm","$setConfirmFunc","fSetConfirmFunc","Styles","fStyles","fAlert","visible","desc","fData","axios","get","params","Minor","result","console","log","data","response","status","fConfirm","id","fConfirmFunc","useEffect","s1","width","height","marginTop","fontSize","backgroundColor","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nconst Order = () => {\r\n\r\n    const { commonStore } = useStores();\r\n    const { $Dim, $setAlert, $Confirm, $setConfirm, $setConfirmFunc } = useObserver(() => ({\r\n      $Dim: commonStore.Dim,\r\n      $setAlert: commonStore.fSetAlert,\r\n      $Confirm: commonStore.Confirm,\r\n      $setConfirm: commonStore.fSetConfirm,\r\n      $setConfirmFunc: commonStore.fSetConfirmFunc,\r\n    }));\r\n  \r\n    const Styles = fStyles($Dim);\r\n  \r\n    const fAlert = () => {\r\n      $setAlert({ visible: true, desc: 'Alert 테스트' });\r\n      return;\r\n    };\r\n  \r\n    const fData = async () => {\r\n      try {\r\n        let result = await axios.get('/@/test/selectByMinorList', {\r\n          params: { Minor: '100' },\r\n        });\r\n        console.log(result.data);\r\n        // const result2 = await axios.post(`/@/stocklist/updateByStockMove`, {\r\n        //   data: {aa: 11, bb: 22},\r\n        // });\r\n      } catch (error) {\r\n        if (error.response.status === 404) {\r\n          $setAlert({ visible: true, desc: '해당 코드가 없습니다.' });\r\n        } else {\r\n          $setAlert({ visible: true, desc: '조회중 오류가 발생하였습니다.' });\r\n        }\r\n      }\r\n    };\r\n  \r\n    const fConfirm = () => {\r\n      $setConfirm({\r\n        visible: true,\r\n        desc: '납품자료를 저장 하시겠습니까?',\r\n        id: 'save',\r\n      });\r\n    };\r\n  \r\n    const fConfirmFunc = async () => {\r\n      $setConfirmFunc(async () => {\r\n        $setConfirm({ visible: false, desc: '', id: '' });\r\n        if ($Confirm.id === 'save') {\r\n          console.log('저장완료');\r\n        }\r\n      });\r\n    };\r\n  \r\n    useEffect(() => {\r\n      console.log('여기 실행됨')\r\n      fConfirmFunc();\r\n    }, [$Confirm]);\r\n\r\n    return (\r\n        <>\r\n        <Box style={Styles.s1} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n          <Box style={{ width: $Dim * 500, height: $Dim * 200, marginTop: $Dim * 20 }} display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Button variant=\"contained\" style={{ width: $Dim * 300, height: $Dim * 70, fontSize: $Dim * 25, backgroundColor: '#323232', color: '#ffffff',marginTop: $Dim * 20 }} onClick={fAlert}>\r\n              Alert\r\n            </Button>\r\n            <Button variant=\"contained\" style={{ width: $Dim * 300, height: $Dim * 70, marginTop: $Dim * 10, fontSize: $Dim * 25, backgroundColor: '#323232', color: '#ffffff' }} onClick={fConfirm}>\r\n              Confirm\r\n            </Button>\r\n            <Button variant=\"contained\" style={{ width: $Dim * 300, height: $Dim * 70, marginTop: $Dim * 10, fontSize: $Dim * 25, backgroundColor: '#323232', color: '#ffffff' }} onClick={fData}>\r\n              DATA\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Order;"]},"metadata":{},"sourceType":"module"}