{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\src\\\\pages\\\\main\\\\Start.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Box, Button } from '@material-ui/core'; //Button\n\nimport useStores from '@stores/useStores';\nimport { useObserver } from 'mobx-react-lite';\nimport { withRouter } from 'react-router-dom';\nimport { TreeView, LocalTreeDataProvider } from 'realgrid';\nimport { columns, fields, rows } from './realgrid-data';\nimport axios from 'axios';\nimport { sortedLastIndexOf } from 'lodash';\nimport { map } from 'jquery';\n\nvar Start = function Start() {\n  var _useStores = useStores(),\n      commonStore = _useStores.commonStore;\n\n  var _useObserver = useObserver(function () {\n    return {\n      $Dim: commonStore.Dim,\n      $setAlert: commonStore.fSetAlert // $Confirm: commonStore.Confirm,\n      // $setConfirm: commonStore.fSetConfirm,\n      // $setConfirmFunc: commonStore.fSetConfirmFunc,\n\n    };\n  }),\n      $Dim = _useObserver.$Dim,\n      $setAlert = _useObserver.$setAlert;\n\n  var Styles = fStyles($Dim);\n  var table4 = [];\n  var table3 = [];\n  var table2 = [];\n  var table1 = [];\n  var row = [];\n\n  var fCount =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('/@/test/MinorByCount');\n\n            case 3:\n              result = _context.sent;\n              result.data.map(function (setting) {\n                axios.get('/@/test/selectByMinorList', {\n                  params: {\n                    Minor: setting.Minor\n                  }\n                }).then(function (res) {\n                  table3 = _objectSpread({}, setting, {\n                    row: res.data\n                  });\n                  table4 = table4.concat(table3);\n                });\n                console.log('보자보자', table4);\n                table2 = _objectSpread({}, table2, {\n                  rows: setting\n                });\n                table1 = table1.concat(table2);\n              });\n              console.log(table1);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n\n              if (_context.t0.response.status === 404) {\n                $setAlert({\n                  visible: true,\n                  desc: '해당 코드가 없습니다.'\n                });\n              } else {\n                $setAlert({\n                  visible: true,\n                  desc: '조회중 오류가 발생하였습니다.'\n                });\n              }\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function fCount() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var treeProvider = useRef(null);\n  var treeView = useRef(null); //   const [format,setFormat]= useState(false); //값이 변경되었을 때 화면을 다시 그리기 위함\n  // const [tables,setTables] =useState([]);\n\n  useEffect(function () {\n    treeView.current === null && (treeProvider.current = new LocalTreeDataProvider());\n    treeView.current === null && (treeView.current = new TreeView(\"realgrid\"));\n    treeView.current.setDataSource(treeProvider.current);\n    treeProvider.current.setFields(fields);\n    treeView.current.setColumns(columns);\n    treeView.current.setCheckBar({\n      visible: false\n    });\n    treeView.current.setEditOptions({\n      insertable: true,\n      appendable: true,\n      updatable: true,\n      deletable: true,\n      //CRUD 하기 위한 작업들\n      softDeleting: true\n    }); // setFormat(false);\n\n    console.log(\"여기 들옴\");\n    treeView.current.cancel(); //수정하고 저장할때 오류를 막기 위함\n\n    fCount(); // axios.get('/@/test/MinorByCount')\n    // .then(res =>{\n    //   (res.data).map((setting)=>{\n    //     console.log(setting)\n    //     axios.get('/@/test/selectByMinorList',{\n    //       params : {Minor : setting.Minor}\n    //     }).then(res =>{\n    //       console.log('여기 언제 들어오나')\n    //     })\n    //     table3 = {...setting, row: 'aa'}\n    //     console.log(3,table3)\n    //     table2 = {...table2, rows: setting}\n    //     console.log(1,table2)\n    //     table1 = table1.concat(table2)\n    //   })\n    //     console.log(2,table1)\n    // }).catch(err => console.log(err))\n  }, []); // axios.get('/@/test/MinorByCount') //테이블데이터 표현\n  // .then(res => {\n  //   (res.data).map((setting)=>{\n  //     //console.log(setting.Minor)\n  //     axios.get('/@/test/selectByMinorList',{params:{Minor:setting.Minor}})\n  //     .then(res=>{\n  //       row = res.data\n  //       table = ({...setting, rows: row});\n  //       //console.log(table)\n  //       //setTables(tables.concat({...setting, rows: row}))\n  //       //onsole.log('보자보자',tables)\n  //       //treeProvider.current.setObjectRows(tables,'Minor',false);\n  //       console.log(table)\n  //     }) //then 끝\n  //     //console.log(tables)\n  //   })// map 끝\n  //  // console.log(tables)###\n  // //  treeProvider.current.setObjectRows(tables,{ tables:\"rows\" },false);\n  // }); //then 끝\n  // // console.log(table)\n\n  return React.createElement(React.Fragment, null, React.createElement(Box, {\n    style: Styles.s1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      width: $Dim * 500,\n      height: $Dim * 200,\n      marginTop: $Dim * 20\n    },\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"realgrid\",\n    style: Styles.s2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      justifyContent: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"\\uC2E0\\uADDC\\uD56D\\uBAA9\"), React.createElement(Button, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"\\uCF54\\uB4DC\\uCD94\\uAC00\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"\\uC800\\uC7A5\"))))));\n};\n\nvar fStyles = function fStyles($Dim) {\n  return {\n    s1: {\n      width: $Dim * 1000,\n      height: $Dim * 550,\n      background: '#fff'\n    },\n    s2: {\n      width: $Dim * 500,\n      height: $Dim * 200,\n      marginTop: $Dim * 30\n    }\n  };\n};\n\nexport default withRouter(Start);","map":{"version":3,"sources":["C:\\Users\\HSE-KMS\\Documents\\Temp\\frontend\\src\\pages\\main\\Start.js"],"names":["React","useRef","useState","useEffect","Box","Button","useStores","useObserver","withRouter","TreeView","LocalTreeDataProvider","columns","fields","rows","axios","sortedLastIndexOf","map","Start","commonStore","$Dim","Dim","$setAlert","fSetAlert","Styles","fStyles","table4","table3","table2","table1","row","fCount","get","result","data","setting","params","Minor","then","res","concat","console","log","response","status","visible","desc","treeProvider","treeView","current","setDataSource","setFields","setColumns","setCheckBar","setEditOptions","insertable","appendable","updatable","deletable","softDeleting","cancel","s1","width","height","marginTop","s2","display","justifyContent","background"],"mappings":"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","sourcesContent":["import React,{useRef,useState,useEffect} from 'react';\r\nimport { Box,Button } from '@material-ui/core'; //Button\r\nimport useStores from '@stores/useStores';\r\nimport { useObserver } from 'mobx-react-lite';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { TreeView, LocalTreeDataProvider } from 'realgrid';\r\nimport { columns, fields,rows } from './realgrid-data';\r\nimport axios from 'axios';\r\nimport { sortedLastIndexOf } from 'lodash';\r\nimport { map } from 'jquery';\r\n\r\nconst Start = () => {\r\n\r\n\r\n\r\n    const { commonStore } = useStores();\r\n    const {$Dim,$setAlert} = useObserver(() => ({\r\n        $Dim: commonStore.Dim,\r\n        $setAlert: commonStore.fSetAlert,\r\n        // $Confirm: commonStore.Confirm,\r\n        // $setConfirm: commonStore.fSetConfirm,\r\n        // $setConfirmFunc: commonStore.fSetConfirmFunc,\r\n      }));\r\n\r\n      const Styles = fStyles($Dim);\r\n      let table4 = []\r\n      let table3 =[]\r\n      let table2 = []\r\n      let table1 = []\r\n      let row = []\r\n      const fCount = async () => {\r\n        try {\r\n          let result = await axios.get('/@/test/MinorByCount');\r\n          (result.data).map((setting)=>{\r\n            axios.get('/@/test/selectByMinorList',{\r\n              params:{Minor:setting.Minor}\r\n            }).then(res =>{\r\n             table3 = {...setting,row:res.data}\r\n             table4 = table4.concat(table3)\r\n            })\r\n            console.log('보자보자',table4)\r\n            table2 = {...table2, rows: setting}\r\n            table1 = table1.concat(table2)\r\n          })\r\n\r\n          console.log(table1)\r\n        } catch (error) {\r\n          if (error.response.status === 404) {\r\n            $setAlert({ visible: true, desc: '해당 코드가 없습니다.' });\r\n          } else {\r\n            $setAlert({ visible: true, desc: '조회중 오류가 발생하였습니다.' });\r\n          }\r\n        }\r\n      };\r\n\r\n      let treeProvider  = useRef(null);\r\n      let treeView  = useRef(null);\r\n    //   const [format,setFormat]= useState(false); //값이 변경되었을 때 화면을 다시 그리기 위함\r\n      // const [tables,setTables] =useState([]);\r\n      useEffect(()=>{\r\n        (treeView.current === null) && (treeProvider.current = new LocalTreeDataProvider());\r\n        (treeView.current === null) && (treeView.current = new TreeView(\"realgrid\"));\r\n        treeView.current.setDataSource(treeProvider.current);\r\n        treeProvider.current.setFields(fields); \r\n        treeView.current.setColumns(columns);\r\n        treeView.current.setCheckBar({\r\n            visible: false\r\n          });\r\n          treeView.current.setEditOptions({\r\n          insertable: true,\r\n          appendable: true,\r\n          updatable: true,\r\n          deletable: true, //CRUD 하기 위한 작업들\r\n          softDeleting: true,\r\n        });\r\n        // setFormat(false);\r\n        console.log(\"여기 들옴\")\r\n\r\n        treeView.current.cancel(); //수정하고 저장할때 오류를 막기 위함\r\n        fCount();\r\n        // axios.get('/@/test/MinorByCount')\r\n        // .then(res =>{\r\n        //   (res.data).map((setting)=>{\r\n        //     console.log(setting)\r\n        //     axios.get('/@/test/selectByMinorList',{\r\n        //       params : {Minor : setting.Minor}\r\n        //     }).then(res =>{\r\n        //       console.log('여기 언제 들어오나')\r\n        //     })\r\n        //     table3 = {...setting, row: 'aa'}\r\n        //     console.log(3,table3)\r\n        //     table2 = {...table2, rows: setting}\r\n        //     console.log(1,table2)\r\n        //     table1 = table1.concat(table2)\r\n        //   })\r\n        //     console.log(2,table1)\r\n        // }).catch(err => console.log(err))\r\n      },[])\r\n\r\n        // axios.get('/@/test/MinorByCount') //테이블데이터 표현\r\n        // .then(res => {\r\n        //   (res.data).map((setting)=>{\r\n        //     //console.log(setting.Minor)\r\n        //     axios.get('/@/test/selectByMinorList',{params:{Minor:setting.Minor}})\r\n        //     .then(res=>{\r\n        //       row = res.data\r\n        //       table = ({...setting, rows: row});\r\n        //       //console.log(table)\r\n        //       //setTables(tables.concat({...setting, rows: row}))\r\n        //       //onsole.log('보자보자',tables)\r\n        //       //treeProvider.current.setObjectRows(tables,'Minor',false);\r\n        //       console.log(table)\r\n        //     }) //then 끝\r\n        //     //console.log(tables)\r\n        //   })// map 끝\r\n        //  // console.log(tables)###\r\n         \r\n        // //  treeProvider.current.setObjectRows(tables,{ tables:\"rows\" },false);\r\n        // }); //then 끝\r\n        // // console.log(table)\r\n     \r\n      \r\n\r\n\r\n    return (\r\n        <>  \r\n      <Box style={Styles.s1} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n        <Box style={{ width: $Dim * 500, height: $Dim * 200, marginTop: $Dim * 20 }} display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\r\n        <button></button>\r\n        <div id=\"realgrid\" style={Styles.s2}></div>\r\n        <div style={{display:'flex'}}>\r\n        <div style={{justifyContent:'flex-start'}}>\r\n        <Button variant=\"contained\">신규항목</Button>\r\n        <Button variant=\"contained\">코드추가</Button>\r\n        </div>\r\n        <div>\r\n        <Button variant=\"contained\">저장</Button>\r\n        </div>\r\n        </div>\r\n        </Box>\r\n      </Box>\r\n        </> \r\n    );\r\n};\r\n\r\nconst fStyles = ($Dim) => {\r\n    return {\r\n      s1: { width: $Dim * 1000, height: $Dim * 550, background: '#fff' },\r\n      s2: { width: $Dim * 500, height: $Dim * 200, marginTop: $Dim * 30},\r\n    };\r\n  };\r\n\r\nexport default withRouter(Start);"]},"metadata":{},"sourceType":"module"}