{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\src\\\\pages\\\\main\\\\Main.js\";\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport useStores from '@stores/useStores';\nimport { useObserver } from 'mobx-react-lite';\nimport axios from 'axios';\nimport { Box, Button } from '@material-ui/core'; // import Toolbar from '@material-ui/core/Toolbar';\n\nvar Main = function Main() {\n  var _useStores = useStores(),\n      commonStore = _useStores.commonStore;\n\n  var _useObserver = useObserver(function () {\n    return {\n      $Dim: commonStore.Dim,\n      $setAlert: commonStore.fSetAlert,\n      $Confirm: commonStore.Confirm,\n      $setConfirm: commonStore.fSetConfirm,\n      $setConfirmFunc: commonStore.fSetConfirmFunc\n    };\n  }),\n      $Dim = _useObserver.$Dim,\n      $setAlert = _useObserver.$setAlert,\n      $Confirm = _useObserver.$Confirm,\n      $setConfirm = _useObserver.$setConfirm,\n      $setConfirmFunc = _useObserver.$setConfirmFunc;\n\n  var Styles = fStyles($Dim);\n\n  var fAlert = function fAlert() {\n    $setAlert({\n      visible: true,\n      desc: 'Alert 테스트'\n    });\n    return;\n  };\n\n  var fData =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('/@/test/selectByMinorList', {\n                params: {\n                  Minor: '100'\n                }\n              });\n\n            case 3:\n              result = _context.sent;\n              console.log(result.data); // const result2 = await axios.post(`/@/stocklist/updateByStockMove`, {\n              //   data: {aa: 11, bb: 22},\n              // });\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n\n              if (_context.t0.response.status === 404) {\n                $setAlert({\n                  visible: true,\n                  desc: '해당 코드가 없습니다.'\n                });\n              } else {\n                $setAlert({\n                  visible: true,\n                  desc: '조회중 오류가 발생하였습니다.'\n                });\n              }\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function fData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var fConfirm = function fConfirm() {\n    $setConfirm({\n      visible: true,\n      desc: '납품자료를 저장 하시겠습니까?',\n      id: 'save'\n    });\n  };\n\n  var fConfirmFunc =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              $setConfirmFunc(\n              /*#__PURE__*/\n              _asyncToGenerator(\n              /*#__PURE__*/\n              _regeneratorRuntime.mark(function _callee2() {\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        $setConfirm({\n                          visible: false,\n                          desc: '',\n                          id: ''\n                        });\n\n                        if ($Confirm.id === 'save') {\n                          console.log('저장완료');\n                        }\n\n                      case 2:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              })));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function fConfirmFunc() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fConfirmFunc();\n  }, [$Confirm]);\n  return React.createElement(React.Fragment, null, React.createElement(Box, {\n    style: Styles.s1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      width: $Dim * 500,\n      height: $Dim * 200,\n      marginTop: $Dim * 20\n    },\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      width: $Dim * 300,\n      height: $Dim * 70,\n      fontSize: $Dim * 25,\n      backgroundColor: '#323232',\n      color: '#ffffff'\n    },\n    onClick: fAlert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Alert\"), React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      width: $Dim * 300,\n      height: $Dim * 70,\n      marginTop: $Dim * 10,\n      fontSize: $Dim * 25,\n      backgroundColor: '#323232',\n      color: '#ffffff'\n    },\n    onClick: fConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Confirm\"), React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      width: $Dim * 300,\n      height: $Dim * 70,\n      marginTop: $Dim * 10,\n      fontSize: $Dim * 25,\n      backgroundColor: '#323232',\n      color: '#ffffff'\n    },\n    onClick: fData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"DATA\"))));\n};\n\nvar fStyles = function fStyles($Dim) {\n  return {\n    s1: {\n      width: $Dim * 1000,\n      height: $Dim * 550,\n      background: '#fff'\n    }\n  };\n};\n\nexport default withRouter(Main);","map":{"version":3,"sources":["C:\\Users\\HSE-KMS\\Documents\\Temp\\frontend\\src\\pages\\main\\Main.js"],"names":["React","useEffect","withRouter","useStores","useObserver","axios","Box","Button","Main","commonStore","$Dim","Dim","$setAlert","fSetAlert","$Confirm","Confirm","$setConfirm","fSetConfirm","$setConfirmFunc","fSetConfirmFunc","Styles","fStyles","fAlert","visible","desc","fData","get","params","Minor","result","console","log","data","response","status","fConfirm","id","fConfirmFunc","s1","width","height","marginTop","fontSize","backgroundColor","color","background"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport useStores from '@stores/useStores';\nimport { useObserver } from 'mobx-react-lite';\nimport axios from 'axios';\nimport { Box, Button } from '@material-ui/core';\n// import Toolbar from '@material-ui/core/Toolbar';\n\nconst Main = () => {\n  const { commonStore } = useStores();\n  const { $Dim, $setAlert, $Confirm, $setConfirm, $setConfirmFunc } = useObserver(() => ({\n    $Dim: commonStore.Dim,\n    $setAlert: commonStore.fSetAlert,\n    $Confirm: commonStore.Confirm,\n    $setConfirm: commonStore.fSetConfirm,\n    $setConfirmFunc: commonStore.fSetConfirmFunc,\n  }));\n\n  const Styles = fStyles($Dim);\n\n  const fAlert = () => {\n    $setAlert({ visible: true, desc: 'Alert 테스트' });\n    return;\n  };\n\n  const fData = async () => {\n    try {\n      let result = await axios.get('/@/test/selectByMinorList', {\n        params: { Minor: '100' },\n      });\n      console.log(result.data);\n      // const result2 = await axios.post(`/@/stocklist/updateByStockMove`, {\n      //   data: {aa: 11, bb: 22},\n      // });\n    } catch (error) {\n      if (error.response.status === 404) {\n        $setAlert({ visible: true, desc: '해당 코드가 없습니다.' });\n      } else {\n        $setAlert({ visible: true, desc: '조회중 오류가 발생하였습니다.' });\n      }\n    }\n  };\n\n  const fConfirm = () => {\n    $setConfirm({\n      visible: true,\n      desc: '납품자료를 저장 하시겠습니까?',\n      id: 'save',\n    });\n  };\n\n  const fConfirmFunc = async () => {\n    $setConfirmFunc(async () => {\n      $setConfirm({ visible: false, desc: '', id: '' });\n      if ($Confirm.id === 'save') {\n        console.log('저장완료');\n      }\n    });\n  };\n\n  useEffect(() => {\n    fConfirmFunc();\n  }, [$Confirm]);\n\n  return (\n    <>\n      <Box style={Styles.s1} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n        <Box style={{ width: $Dim * 500, height: $Dim * 200, marginTop: $Dim * 20 }} display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\">\n          <Button variant=\"contained\" style={{ width: $Dim * 300, height: $Dim * 70, fontSize: $Dim * 25, backgroundColor: '#323232', color: '#ffffff' }} onClick={fAlert}>\n            Alert\n          </Button>\n          <Button variant=\"contained\" style={{ width: $Dim * 300, height: $Dim * 70, marginTop: $Dim * 10, fontSize: $Dim * 25, backgroundColor: '#323232', color: '#ffffff' }} onClick={fConfirm}>\n            Confirm\n          </Button>\n          <Button variant=\"contained\" style={{ width: $Dim * 300, height: $Dim * 70, marginTop: $Dim * 10, fontSize: $Dim * 25, backgroundColor: '#323232', color: '#ffffff' }} onClick={fData}>\n            DATA\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nconst fStyles = ($Dim) => {\n  return {\n    s1: { width: $Dim * 1000, height: $Dim * 550, background: '#fff' },\n  };\n};\n\nexport default withRouter(Main);\n"]},"metadata":{},"sourceType":"module"}