{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\src\\\\pages\\\\popups\\\\GetSearch.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useStores from '@stores/useStores';\nimport { useObserver } from 'mobx-react-lite';\nimport { Box, Button } from '@material-ui/core';\nimport imgLogo from '@assets/images/img_eng_mark.png';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { tr } from 'date-fns/locale';\nimport { GridView, LocalDataProvider } from 'realgrid';\nimport { ValueType } from 'realgrid';\nimport { tSTypeParameter } from '../../../../../../AppData/Local/Microsoft/TypeScript/4.1/node_modules/@babel/types/lib/index';\n\nvar GetSearch = function GetSearch(_ref) {\n  var showView3 = _ref.showView3,\n      setShowView3 = _ref.setShowView3,\n      setPart = _ref.setPart,\n      showView2 = _ref.showView2,\n      setShowView2 = _ref.setShowView2,\n      showView = _ref.showView,\n      setShowView = _ref.setShowView,\n      setSubclass = _ref.setSubclass,\n      setVisible = _ref.setVisible,\n      visible = _ref.visible;\n\n  var _useStores = useStores(),\n      commonStore = _useStores.commonStore;\n\n  var _useObserver = useObserver(function () {\n    return {\n      $Dim: commonStore.Dim\n    };\n  }),\n      $Dim = _useObserver.$Dim; //취소버튼 클릭 시\n\n\n  var onCancel = function onCancel() {\n    setVisible(false);\n    setSubclass('');\n  }; //확인버튼 클릭 시\n\n\n  var onConfirm = function onConfirm() {\n    //데이터가 있으면 밑에 한칸 추가\n    if (data !== null) {\n      setShowView(true);\n    } //밑에 칸이 없을 때 해당 데이터 lookup에 넣기\n\n\n    if (showView === false) {\n      setSubclass(data);\n    }\n\n    setVisible(false); //밑에 칸이 있다면 이 함수를 실행(3번째 칸 열지말지)\n\n    if (showView) {\n      console.log('리마크 보자', remark);\n\n      if (remark !== 'BD') {\n        setShowView2(true);\n      } else {\n        setShowView3(true);\n      }\n\n      setPart(data);\n    }\n  };\n\n  var provider = useRef(null);\n  var gridView = useRef(null);\n\n  var _useState = useState('%'),\n      _useState2 = _slicedToArray(_useState, 2),\n      write = _useState2[0],\n      setWrite = _useState2[1];\n\n  var inputHandle = function inputHandle(e) {\n    setWrite(_objectSpread({}, write, _defineProperty({}, e.target.name, e.target.value)));\n  }; //리스트\n\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      minorcd = _useState6[0],\n      setMinorcd = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      remark = _useState8[0],\n      setRemark = _useState8[1]; // const data = useRef(null);\n\n\n  var fCount =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('/@/test/select1', {\n                params: {\n                  Minor: '062',\n                  Item1: '061001',\n                  Minornm: '%'\n                }\n              });\n\n            case 3:\n              result = _context.sent;\n              provider.current.setRows(result.data);\n              console.log(1, result.data);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(1, _context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function fCount() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var fCount2 =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var result1, result2;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n\n              if (!(showView === false)) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 4;\n              return axios.get('/@/test/select1', {\n                params: {\n                  Minor: '062',\n                  Item1: '061001',\n                  Minornm: write.search\n                }\n              });\n\n            case 4:\n              result1 = _context2.sent;\n              provider.current.setRows(result1.data);\n              _context2.next = 12;\n              break;\n\n            case 8:\n              _context2.next = 10;\n              return axios.get('/@/test/select1', {\n                params: {\n                  Minor: '499',\n                  Item1: minorcd,\n                  Minornm: write.search\n                }\n              });\n\n            case 10:\n              result2 = _context2.sent;\n              provider.current.setRows(result2.data);\n\n            case 12:\n              setWrite('%'); // setData(result.data);\n\n              _context2.next = 18;\n              break;\n\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(1, _context2.t0);\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 15]]);\n    }));\n\n    return function fCount2() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var fCount3 =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.get('/@/test/select1', {\n                params: {\n                  Minor: '499',\n                  Item1: minorcd,\n                  Minornm: '%'\n                }\n              });\n\n            case 3:\n              result = _context3.sent;\n              provider.current.setRows(result.data);\n              setWrite('%'); // setData(result.data);\n\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(1, _context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n\n    return function fCount3() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (visible) {\n      provider.current = new LocalDataProvider();\n      gridView.current = new GridView('realgrid');\n      gridView.current.setDataSource(provider.current);\n      provider.current.setFields(fields);\n      gridView.current.setColumns(columns);\n      var height = gridView.current.displayOptions.rowHeight;\n      gridView.current.displayOptions.rowHeight = height + 40;\n      gridView.current.displayOptions.selectionStyle = 'rows';\n      gridView.current.columnByName('Minornm').editable = false;\n      gridView.current.columnByName('Remark').editable = false;\n      gridView.current.setCheckBar({\n        visible: false\n      });\n      gridView.current.setStateBar({\n        visible: false\n      });\n      registerCallback();\n    }\n\n    if (showView === false) {\n      console.log('여기들어오고');\n      fCount();\n    }\n\n    if (showView !== false) {\n      console.log('여기들어옴');\n      fCount3();\n    }\n  }, [visible]);\n\n  function registerCallback() {\n    gridView.current.onCellClicked = function (grid, clickData) {\n      setData(gridView.current.getValues(clickData.itemIndex).Minornm);\n      setMinorcd(gridView.current.getValues(clickData.itemIndex).Minorcd);\n      setRemark(gridView.current.getValues(clickData.itemIndex).Remark);\n    };\n  } //visible이 false 이면 null 리턴\n\n\n  if (!visible) return null;\n  return React.createElement(React.Fragment, null, React.createElement(Box, {\n    style: {\n      position: 'fixed',\n      zIndex: 2000,\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.25)'\n    },\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      height: $Dim * 400,\n      width: $Dim * 250,\n      background: '#fff',\n      borderRadius: '4px',\n      boxShadow: '0px 0px 8px rgba(0, 0, 0, 0.125)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      background: '#e6e6e6',\n      padding: $Dim * 5,\n      borderTopLeftRadius: '4px',\n      borderTopRightRadius: '4px'\n    },\n    display: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgLogo,\n    alt: \"logo\",\n    style: {\n      width: $Dim * 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(Box, {\n    style: {\n      padding: $Dim * 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      marginTop: $Dim * 10,\n      marginBottom: $Dim * 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      height: $Dim * 300,\n      fontSize: $Dim * 10,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-basic\",\n    name: \"search\",\n    placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    variant: \"outlined\",\n    style: {\n      width: $Dim * 150\n    },\n    onChange: inputHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: function onClick() {\n      fCount2();\n    },\n    variant: \"contained\",\n    style: {\n      marginLeft: $Dim * 15,\n      width: $Dim * 60,\n      height: $Dim * 30,\n      backgroundColor: '#348fe2',\n      fontSize: $Dim * 10,\n      color: '#ffffff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"\\uC870\\uD68C\")), React.createElement(Box, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"realgrid\",\n    style: {\n      width: '435px',\n      height: '500px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })))), ' ', React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      flexgrow: 0.5,\n      width: $Dim * 100,\n      height: $Dim * 30,\n      backgroundColor: 'red',\n      fontSize: $Dim * 10,\n      color: '#ffffff'\n    },\n    onClick: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"\\uB2EB\\uAE30\"), React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      width: $Dim * 100,\n      height: $Dim * 30,\n      backgroundColor: '#348fe2',\n      fontSize: $Dim * 10,\n      color: '#ffffff'\n    },\n    onClick: onConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"\\uD655\\uC778\"))))));\n}; //그리드 컬럼및 필드\n\n\nvar fields = [{\n  fieldName: 'Minornm',\n  dataType: ValueType.TEXT\n}, {\n  fieldName: 'Remark',\n  dataType: ValueType.TEXT\n}, {\n  fieldName: 'Minorcd',\n  dataType: ValueType.TEXT\n}];\nvar columns = [{\n  name: 'Minornm',\n  fieldName: 'Minornm',\n  type: 'data',\n  width: '300',\n  styles: {\n    textAlignment: 'center'\n  },\n  header: {\n    text: '코드명',\n    showTooltip: true,\n    tooltip: '<span style=\"color: red;\">이름</span>'\n  },\n  renderer: {\n    type: 'text',\n    showTooltip: true\n  }\n}, {\n  name: 'Remark',\n  fieldName: 'Remark',\n  type: 'data',\n  width: '100',\n  styles: {\n    textAlignment: 'center'\n  },\n  header: {\n    text: '품번항목',\n    showTooltip: false\n  },\n  numberFormat: '0'\n}];\nexport default GetSearch;","map":{"version":3,"sources":["C:\\Users\\HSE-KMS\\Documents\\Temp\\frontend\\src\\pages\\popups\\GetSearch.js"],"names":["React","useState","useEffect","useRef","useStores","useObserver","Box","Button","imgLogo","TextField","axios","tr","GridView","LocalDataProvider","ValueType","tSTypeParameter","GetSearch","showView3","setShowView3","setPart","showView2","setShowView2","showView","setShowView","setSubclass","setVisible","visible","commonStore","$Dim","Dim","onCancel","onConfirm","data","console","log","remark","provider","gridView","write","setWrite","inputHandle","e","target","name","value","setData","minorcd","setMinorcd","setRemark","fCount","get","params","Minor","Item1","Minornm","result","current","setRows","fCount2","search","result1","result2","fCount3","setDataSource","setFields","fields","setColumns","columns","height","displayOptions","rowHeight","selectionStyle","columnByName","editable","setCheckBar","setStateBar","registerCallback","onCellClicked","grid","clickData","getValues","itemIndex","Minorcd","Remark","position","zIndex","top","left","width","background","borderRadius","boxShadow","padding","borderTopLeftRadius","borderTopRightRadius","marginTop","marginBottom","fontSize","fontWeight","marginLeft","backgroundColor","color","display","justifyContent","flexgrow","fieldName","dataType","TEXT","type","styles","textAlignment","header","text","showTooltip","tooltip","renderer","numberFormat"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport useStores from '@stores/useStores';\r\nimport { useObserver } from 'mobx-react-lite';\r\nimport { Box, Button } from '@material-ui/core';\r\nimport imgLogo from '@assets/images/img_eng_mark.png';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport { tr } from 'date-fns/locale';\r\nimport { GridView, LocalDataProvider } from 'realgrid';\r\nimport { ValueType } from 'realgrid';\r\nimport { tSTypeParameter } from '../../../../../../AppData/Local/Microsoft/TypeScript/4.1/node_modules/@babel/types/lib/index';\r\n\r\n\r\n\r\nconst GetSearch = ({ showView3, setShowView3 ,setPart, showView2, setShowView2, showView, setShowView, setSubclass, setVisible, visible }) => {\r\n  const { commonStore } = useStores();\r\n  const { $Dim } = useObserver(() => ({\r\n    $Dim: commonStore.Dim,\r\n  }));\r\n\r\n  //취소버튼 클릭 시\r\n  const onCancel = () => {\r\n    setVisible(false);\r\n    setSubclass('');\r\n  };\r\n\r\n  //확인버튼 클릭 시\r\n  const onConfirm = () => {\r\n    //데이터가 있으면 밑에 한칸 추가\r\n    if (data !== null) {\r\n      setShowView(true);\r\n    }\r\n    //밑에 칸이 없을 때 해당 데이터 lookup에 넣기\r\n    if (showView === false) {\r\n      setSubclass(data);\r\n    }\r\n    setVisible(false);\r\n    //밑에 칸이 있다면 이 함수를 실행(3번째 칸 열지말지)\r\n    if (showView) {\r\n      console.log('리마크 보자', remark);\r\n      if (remark !== 'BD') {\r\n        setShowView2(true);\r\n      }else{\r\n        setShowView3(true)\r\n      }\r\n      setPart(data);\r\n    }\r\n  };\r\n\r\n  let provider = useRef(null);\r\n  let gridView = useRef(null);\r\n\r\n  const [write, setWrite] = useState('%');\r\n  const inputHandle = (e) => {\r\n    setWrite({\r\n      ...write,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  //리스트\r\n  const [data, setData] = useState();\r\n  const [minorcd, setMinorcd] = useState();\r\n  const [remark, setRemark] = useState();\r\n  // const data = useRef(null);\r\n  const fCount = async () => {\r\n    try {\r\n      let result = await axios.get('/@/test/select1', {\r\n        params: { Minor: '062', Item1: '061001', Minornm: '%' },\r\n      });\r\n      provider.current.setRows(result.data);\r\n      console.log(1, result.data);\r\n    } catch (error) {\r\n      console.log(1, error);\r\n    }\r\n  };\r\n  const fCount2 = async () => {\r\n    try {\r\n      if (showView === false) {\r\n        let result1 = await axios.get('/@/test/select1', {\r\n          params: { Minor: '062', Item1: '061001', Minornm: write.search },\r\n        });\r\n        provider.current.setRows(result1.data);\r\n      } else {\r\n        let result2 = await axios.get('/@/test/select1', {\r\n          params: { Minor: '499', Item1: minorcd, Minornm: write.search },\r\n        });\r\n        provider.current.setRows(result2.data);\r\n      }\r\n      setWrite('%');\r\n      // setData(result.data);\r\n    } catch (error) {\r\n      console.log(1, error);\r\n    }\r\n  };\r\n\r\n  const fCount3 = async () => {\r\n    try {\r\n      let result = await axios.get('/@/test/select1', {\r\n        params: { Minor: '499', Item1: minorcd, Minornm: '%' },\r\n      });\r\n      provider.current.setRows(result.data);\r\n      setWrite('%');\r\n      // setData(result.data);\r\n    } catch (error) {\r\n      console.log(1, error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      provider.current = new LocalDataProvider();\r\n      gridView.current = new GridView('realgrid');\r\n      gridView.current.setDataSource(provider.current);\r\n      provider.current.setFields(fields);\r\n      gridView.current.setColumns(columns);\r\n      const height = gridView.current.displayOptions.rowHeight;\r\n      gridView.current.displayOptions.rowHeight = height + 40;\r\n      gridView.current.displayOptions.selectionStyle = 'rows';\r\n      gridView.current.columnByName('Minornm').editable = false;\r\n      gridView.current.columnByName('Remark').editable = false;\r\n      gridView.current.setCheckBar({\r\n        visible: false,\r\n      });\r\n      gridView.current.setStateBar({\r\n        visible: false,\r\n      });\r\n      registerCallback();\r\n    }\r\n    if (showView === false) {\r\n      console.log('여기들어오고');\r\n      fCount();\r\n    }\r\n    if (showView !== false) {\r\n      console.log('여기들어옴');\r\n      fCount3();\r\n    }\r\n  }, [visible]);\r\n\r\n  function registerCallback() {\r\n    gridView.current.onCellClicked = function (grid, clickData) {\r\n      setData(gridView.current.getValues(clickData.itemIndex).Minornm);\r\n      setMinorcd(gridView.current.getValues(clickData.itemIndex).Minorcd);\r\n      setRemark(gridView.current.getValues(clickData.itemIndex).Remark);\r\n    };\r\n  }\r\n  //visible이 false 이면 null 리턴\r\n  if (!visible) return null;\r\n  return (\r\n    <>\r\n      <Box style={{ position: 'fixed', zIndex: 2000, top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0, 0, 0, 0.25)' }} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n        <Box style={{ height: $Dim * 400, width: $Dim * 250, background: '#fff', borderRadius: '4px', boxShadow: '0px 0px 8px rgba(0, 0, 0, 0.125)' }}>\r\n          <Box style={{ background: '#e6e6e6', padding: $Dim * 5, borderTopLeftRadius: '4px', borderTopRightRadius: '4px' }} display=\"flex\">\r\n            <img src={imgLogo} alt=\"logo\" style={{ width: $Dim * 40 }} />\r\n          </Box>\r\n          <Box style={{ padding: $Dim * 8 }}>\r\n            <Box style={{ marginTop: $Dim * 10, marginBottom: $Dim * 20 }}>\r\n              <Box style={{ height: $Dim * 300, fontSize: $Dim * 10, fontWeight: 'bold' }}>\r\n                <Box>\r\n                  <TextField id=\"outlined-basic\" name=\"search\" placeholder=\"검색어를 입력하세요\" variant=\"outlined\" style={{ width: $Dim * 150 }} onChange={inputHandle} />\r\n                  <Button\r\n                    onClick={() => {\r\n                      fCount2();\r\n                    }}\r\n                    variant=\"contained\"\r\n                    style={{ marginLeft: $Dim * 15, width: $Dim * 60, height: $Dim * 30, backgroundColor: '#348fe2', fontSize: $Dim * 10, color: '#ffffff' }}\r\n                  >\r\n                    조회\r\n                  </Button>\r\n                </Box>\r\n                <Box style={{ display: 'flex', justifyContent: 'center' }}>\r\n                  <div id=\"realgrid\" style={{ width: '435px', height: '500px' }} />\r\n                  {/* <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>코드명</th>\r\n                        <th>품번항목</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {data.current.map((da, index) => (\r\n                        <tr key={index}>\r\n                          <td>{da.Minornm}</td>\r\n                          <td>{da.Remark}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table> */}\r\n                </Box>\r\n              </Box>\r\n            </Box>{' '}\r\n            {/* 내용부분 */}\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Button variant=\"contained\" style={{ flexgrow: 0.5, width: $Dim * 100, height: $Dim * 30, backgroundColor: 'red', fontSize: $Dim * 10, color: '#ffffff' }} onClick={onCancel}>\r\n                닫기\r\n              </Button>\r\n\r\n              <Button variant=\"contained\" style={{ width: $Dim * 100, height: $Dim * 30, backgroundColor: '#348fe2', fontSize: $Dim * 10, color: '#ffffff' }} onClick={onConfirm}>\r\n                확인\r\n              </Button>\r\n            </Box>\r\n            {/* 버튼부분 */}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\n//그리드 컬럼및 필드\r\nconst fields = [\r\n  {\r\n    fieldName: 'Minornm',\r\n    dataType: ValueType.TEXT,\r\n  },\r\n  {\r\n    fieldName: 'Remark',\r\n    dataType: ValueType.TEXT,\r\n  },\r\n  {\r\n    fieldName: 'Minorcd',\r\n    dataType: ValueType.TEXT,\r\n  },\r\n];\r\n\r\nconst columns = [\r\n  {\r\n    name: 'Minornm',\r\n    fieldName: 'Minornm',\r\n    type: 'data',\r\n    width: '300',\r\n    styles: {\r\n      textAlignment: 'center',\r\n    },\r\n    header: {\r\n      text: '코드명',\r\n      showTooltip: true,\r\n      tooltip: '<span style=\"color: red;\">이름</span>',\r\n    },\r\n    renderer: {\r\n      type: 'text',\r\n      showTooltip: true,\r\n    },\r\n  },\r\n  {\r\n    name: 'Remark',\r\n    fieldName: 'Remark',\r\n    type: 'data',\r\n    width: '100',\r\n    styles: {\r\n      textAlignment: 'center',\r\n    },\r\n    header: {\r\n      text: '품번항목',\r\n      showTooltip: false,\r\n    },\r\n    numberFormat: '0',\r\n  },\r\n];\r\n\r\nexport default GetSearch;\r\n"]},"metadata":{},"sourceType":"module"}