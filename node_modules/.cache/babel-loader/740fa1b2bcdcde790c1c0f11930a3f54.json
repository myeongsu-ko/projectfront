{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HSE-KMS\\\\Documents\\\\Temp\\\\frontend\\\\src\\\\pages\\\\popups\\\\GetSearch3.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport useStores from '@stores/useStores';\nimport { useObserver } from 'mobx-react-lite';\nimport { Box, Button } from '@material-ui/core';\nimport imgLogo from '@assets/images/img_eng_mark.png';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { GridView, LocalDataProvider, ValueType } from 'realgrid';\n\nvar GetSearch3 = function GetSearch3(_ref) {\n  var iconHandle = _ref.iconHandle,\n      resetHandle = _ref.resetHandle,\n      visible3 = _ref.visible3,\n      setVisible3 = _ref.setVisible3,\n      setStgrade = _ref.setStgrade;\n\n  var _useStores = useStores(),\n      commonStore = _useStores.commonStore;\n\n  var _useObserver = useObserver(function () {\n    return {\n      $Dim: commonStore.Dim,\n      $setAlert: commonStore.fSetAlert\n    };\n  }),\n      $Dim = _useObserver.$Dim,\n      $setAlert = _useObserver.$setAlert;\n\n  var provider = useRef(null);\n  var gridView = useRef(null);\n\n  var fAlert = function fAlert() {\n    $setAlert({\n      visible: true,\n      desc: '행을 클릭하세요'\n    });\n    return;\n  };\n\n  var _useState = useState({\n    search: '%'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      write = _useState2[0],\n      setWrite = _useState2[1];\n\n  var inputHandle = function inputHandle(e) {\n    setWrite(_objectSpread({}, write, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1]; //확인버튼 클릭 시\n\n\n  var onConfirm = function onConfirm() {\n    if (data === null) {\n      fAlert();\n    } else {\n      setStgrade(data);\n      setData(null);\n      setVisible3(false);\n      setWrite({\n        search: '%'\n      });\n    }\n  }; //취소버튼 클릭 시\n\n\n  var onCancel = function onCancel() {\n    setVisible3(false);\n  };\n\n  var exam =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('/@/test/select3', {\n                params: {\n                  likes: write.search\n                }\n              });\n\n            case 2:\n              result = _context.sent;\n              provider.current.setRows(result.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function exam() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (visible3) {\n      provider.current = new LocalDataProvider();\n      gridView.current = new GridView('realgrid');\n      gridView.current.setDataSource(provider.current);\n      provider.current.setFields(fields);\n      gridView.current.setColumns(columns);\n      var height = gridView.current.displayOptions.rowHeight;\n      gridView.current.displayOptions.rowHeight = height + 40;\n      gridView.current.displayOptions.selectionStyle = 'rows';\n      gridView.current.columnByName('Minornm').editable = false;\n      gridView.current.columnByName('Remark').editable = false;\n      gridView.current.sortingOptions.enabled = false;\n      gridView.current.setCheckBar({\n        visible: false\n      });\n      gridView.current.setStateBar({\n        visible: false\n      });\n      registerCallback(); // fCount();\n\n      exam();\n    }\n  }, [visible3]); //클릭시 데이터\n\n  function registerCallback() {\n    gridView.current.onCellClicked = function (grid, clickData) {\n      setData(gridView.current.getValues(clickData.itemIndex));\n    };\n  }\n\n  if (!visible3) return null;\n  return React.createElement(React.Fragment, null, React.createElement(Box, {\n    style: {\n      position: 'fixed',\n      zIndex: 2000,\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.25)'\n    },\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      height: $Dim * 400,\n      width: $Dim * 250,\n      background: '#fff',\n      borderRadius: '4px',\n      boxShadow: '0px 0px 8px rgba(0, 0, 0, 0.125)'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      background: '#e6e6e6',\n      padding: $Dim * 5,\n      borderTopLeftRadius: '4px',\n      borderTopRightRadius: '4px'\n    },\n    display: \"flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgLogo,\n    alt: \"logo\",\n    style: {\n      width: $Dim * 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(Box, {\n    style: {\n      padding: $Dim * 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      marginTop: $Dim * 10,\n      marginBottom: $Dim * 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Box, {\n    style: {\n      height: $Dim * 300,\n      fontSize: $Dim * 10,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-basic\",\n    name: \"search\",\n    placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    variant: \"outlined\",\n    style: {\n      width: $Dim * 150\n    },\n    onChange: inputHandle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: exam,\n    variant: \"contained\",\n    style: {\n      marginLeft: $Dim * 15,\n      width: $Dim * 60,\n      height: $Dim * 30,\n      backgroundColor: '#348fe2',\n      fontSize: $Dim * 10,\n      color: '#ffffff'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"\\uC870\\uD68C\")), React.createElement(Box, {\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"realgrid\",\n    style: {\n      width: '435px',\n      height: '500px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })))), ' ', React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      flexgrow: 0.5,\n      width: $Dim * 100,\n      height: $Dim * 30,\n      backgroundColor: 'red',\n      fontSize: $Dim * 10,\n      color: '#ffffff'\n    },\n    onClick: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"\\uB2EB\\uAE30\"), React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      width: $Dim * 100,\n      height: $Dim * 30,\n      backgroundColor: '#348fe2',\n      fontSize: $Dim * 10,\n      color: '#ffffff'\n    },\n    onClick: onConfirm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"\\uD655\\uC778\"))))));\n};\n\nvar fields = [{\n  fieldName: 'Minornm',\n  dataType: ValueType.TEXT\n}, {\n  fieldName: 'Remark',\n  dataType: ValueType.TEXT\n}, {\n  fieldName: 'Item1',\n  dataType: ValueType.TEXT\n}, {\n  fieldName: 'Item2',\n  dataType: ValueType.TEXT\n}, {\n  fieldName: 'Minorcd',\n  dataType: ValueType.TEXT\n}];\nvar columns = [{\n  name: 'Minornm',\n  fieldName: 'Minornm',\n  type: 'data',\n  width: '100',\n  styles: {\n    textAlignment: 'center'\n  },\n  header: {\n    text: '코드명',\n    showTooltip: true,\n    tooltip: '<span style=\"color: red;\">이름</span>'\n  },\n  renderer: {\n    type: 'text',\n    showTooltip: true\n  }\n}, {\n  name: 'Remark',\n  fieldName: 'Remark',\n  type: 'data',\n  width: '100',\n  styles: {\n    textAlignment: 'center'\n  },\n  header: {\n    text: '품번항목',\n    showTooltip: false\n  },\n  numberFormat: '0'\n}, {\n  name: 'Item1',\n  fieldName: 'Item1',\n  type: 'data',\n  width: '100',\n  styles: {\n    textAlignment: 'center'\n  },\n  header: {\n    text: '단위',\n    showTooltip: false\n  },\n  numberFormat: '0'\n}, {\n  name: 'Item2',\n  fieldName: 'Item2',\n  type: 'data',\n  width: '100',\n  styles: {\n    textAlignment: 'center'\n  },\n  header: {\n    text: 'BORE',\n    showTooltip: false\n  },\n  numberFormat: '0'\n}];\nexport default GetSearch3;","map":{"version":3,"sources":["C:\\Users\\HSE-KMS\\Documents\\Temp\\frontend\\src\\pages\\popups\\GetSearch3.js"],"names":["React","useState","useEffect","useRef","useStores","useObserver","Box","Button","imgLogo","TextField","axios","GridView","LocalDataProvider","ValueType","GetSearch3","iconHandle","resetHandle","visible3","setVisible3","setStgrade","commonStore","$Dim","Dim","$setAlert","fSetAlert","provider","gridView","fAlert","visible","desc","search","write","setWrite","inputHandle","e","target","name","value","data","setData","onConfirm","onCancel","exam","get","params","likes","result","current","setRows","setDataSource","setFields","fields","setColumns","columns","height","displayOptions","rowHeight","selectionStyle","columnByName","editable","sortingOptions","enabled","setCheckBar","setStateBar","registerCallback","onCellClicked","grid","clickData","getValues","itemIndex","position","zIndex","top","left","width","background","borderRadius","boxShadow","padding","borderTopLeftRadius","borderTopRightRadius","marginTop","marginBottom","fontSize","fontWeight","marginLeft","backgroundColor","color","display","justifyContent","flexgrow","fieldName","dataType","TEXT","type","styles","textAlignment","header","text","showTooltip","tooltip","renderer","numberFormat"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport useStores from '@stores/useStores';\r\nimport { useObserver } from 'mobx-react-lite';\r\nimport { Box, Button } from '@material-ui/core';\r\nimport imgLogo from '@assets/images/img_eng_mark.png';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport { GridView, LocalDataProvider, ValueType } from 'realgrid';\r\n\r\nconst GetSearch3 = ({ iconHandle, resetHandle, visible3, setVisible3, setStgrade }) => {\r\n  const { commonStore } = useStores();\r\n  const { $Dim, $setAlert } = useObserver(() => ({\r\n    $Dim: commonStore.Dim,\r\n    $setAlert: commonStore.fSetAlert,\r\n  }));\r\n  let provider = useRef(null);\r\n  let gridView = useRef(null);\r\n  const fAlert = () => {\r\n    $setAlert({ visible: true, desc: '행을 클릭하세요' });\r\n    return;\r\n  };\r\n  const [write, setWrite] = useState({\r\n    search: '%',\r\n  });\r\n  const inputHandle = (e) => {\r\n    setWrite({\r\n      ...write,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const [data, setData] = useState(null);\r\n\r\n\r\n  //확인버튼 클릭 시\r\n  const onConfirm = () => {\r\n    if (data === null) {\r\n      fAlert();\r\n    } else {\r\n      setStgrade(data);\r\n      setData(null);\r\n      setVisible3(false);\r\n      setWrite({\r\n        search: '%'\r\n      })\r\n    }\r\n  };\r\n\r\n  //취소버튼 클릭 시\r\n  const onCancel = () => {\r\n    setVisible3(false);\r\n  };\r\n\r\n\r\n  const exam = async () => {\r\n    let result = await axios.get('/@/test/select3', {\r\n      params: { likes: write.search },\r\n    });\r\n    provider.current.setRows(result.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (visible3) {\r\n      provider.current = new LocalDataProvider();\r\n      gridView.current = new GridView('realgrid');\r\n      gridView.current.setDataSource(provider.current);\r\n      provider.current.setFields(fields);\r\n      gridView.current.setColumns(columns);\r\n      const height = gridView.current.displayOptions.rowHeight;\r\n      gridView.current.displayOptions.rowHeight = height + 40;\r\n      gridView.current.displayOptions.selectionStyle = 'rows';\r\n      gridView.current.columnByName('Minornm').editable = false;\r\n      gridView.current.columnByName('Remark').editable = false;\r\n      gridView.current.sortingOptions.enabled = false;\r\n      gridView.current.setCheckBar({\r\n        visible: false,\r\n      });\r\n      gridView.current.setStateBar({\r\n        visible: false,\r\n      });\r\n      registerCallback();\r\n      // fCount();\r\n      exam();\r\n    }\r\n  }, [visible3]);\r\n  //클릭시 데이터\r\n  function registerCallback() {\r\n    gridView.current.onCellClicked = function (grid, clickData) {\r\n      setData(gridView.current.getValues(clickData.itemIndex));\r\n    };\r\n  }\r\n\r\n  if (!visible3) return null;\r\n  return (\r\n    <>\r\n      <Box style={{ position: 'fixed', zIndex: 2000, top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0, 0, 0, 0.25)' }} display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n        <Box style={{ height: $Dim * 400, width: $Dim * 250, background: '#fff', borderRadius: '4px', boxShadow: '0px 0px 8px rgba(0, 0, 0, 0.125)' }}>\r\n          <Box style={{ background: '#e6e6e6', padding: $Dim * 5, borderTopLeftRadius: '4px', borderTopRightRadius: '4px' }} display=\"flex\">\r\n            <img src={imgLogo} alt=\"logo\" style={{ width: $Dim * 40 }} />\r\n          </Box>\r\n          <Box style={{ padding: $Dim * 8 }}>\r\n            <Box style={{ marginTop: $Dim * 10, marginBottom: $Dim * 20 }}>\r\n              <Box style={{ height: $Dim * 300, fontSize: $Dim * 10, fontWeight: 'bold' }}>\r\n                <Box>\r\n                  <TextField id=\"outlined-basic\" name=\"search\" placeholder=\"검색어를 입력하세요\" variant=\"outlined\" style={{ width: $Dim * 150 }} onChange={inputHandle} />\r\n                  <Button onClick={exam} variant=\"contained\" style={{ marginLeft: $Dim * 15, width: $Dim * 60, height: $Dim * 30, backgroundColor: '#348fe2', fontSize: $Dim * 10, color: '#ffffff' }}>\r\n                    조회\r\n                  </Button>\r\n                </Box>\r\n                <Box style={{ display: 'flex', justifyContent: 'center' }}>\r\n                  <div id=\"realgrid\" style={{ width: '435px', height: '500px' }} />\r\n                </Box>\r\n              </Box>\r\n            </Box>{' '}\r\n            {/* 내용부분 */}\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Button variant=\"contained\" style={{ flexgrow: 0.5, width: $Dim * 100, height: $Dim * 30, backgroundColor: 'red', fontSize: $Dim * 10, color: '#ffffff' }} onClick={onCancel}>\r\n                닫기\r\n              </Button>\r\n\r\n              <Button variant=\"contained\" style={{ width: $Dim * 100, height: $Dim * 30, backgroundColor: '#348fe2', fontSize: $Dim * 10, color: '#ffffff' }} onClick={onConfirm}>\r\n                확인\r\n              </Button>\r\n            </Box>\r\n            {/* 버튼부분 */}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\nconst fields = [\r\n  {\r\n    fieldName: 'Minornm',\r\n    dataType: ValueType.TEXT,\r\n  },\r\n  {\r\n    fieldName: 'Remark',\r\n    dataType: ValueType.TEXT,\r\n  },\r\n  {\r\n    fieldName: 'Item1',\r\n    dataType: ValueType.TEXT,\r\n  },\r\n  {\r\n    fieldName: 'Item2',\r\n    dataType: ValueType.TEXT,\r\n  },\r\n  {\r\n    fieldName: 'Minorcd',\r\n    dataType: ValueType.TEXT,\r\n  },\r\n];\r\n\r\nconst columns = [\r\n  {\r\n    name: 'Minornm',\r\n    fieldName: 'Minornm',\r\n    type: 'data',\r\n    width: '100',\r\n    styles: {\r\n      textAlignment: 'center',\r\n    },\r\n    header: {\r\n      text: '코드명',\r\n      showTooltip: true,\r\n      tooltip: '<span style=\"color: red;\">이름</span>',\r\n    },\r\n    renderer: {\r\n      type: 'text',\r\n      showTooltip: true,\r\n    },\r\n  },\r\n  {\r\n    name: 'Remark',\r\n    fieldName: 'Remark',\r\n    type: 'data',\r\n    width: '100',\r\n    styles: {\r\n      textAlignment: 'center',\r\n    },\r\n    header: {\r\n      text: '품번항목',\r\n      showTooltip: false,\r\n    },\r\n    numberFormat: '0',\r\n  },\r\n  {\r\n    name: 'Item1',\r\n    fieldName: 'Item1',\r\n    type: 'data',\r\n    width: '100',\r\n    styles: {\r\n      textAlignment: 'center',\r\n    },\r\n    header: {\r\n      text: '단위',\r\n      showTooltip: false,\r\n    },\r\n    numberFormat: '0',\r\n  },\r\n  {\r\n    name: 'Item2',\r\n    fieldName: 'Item2',\r\n    type: 'data',\r\n    width: '100',\r\n    styles: {\r\n      textAlignment: 'center',\r\n    },\r\n    header: {\r\n      text: 'BORE',\r\n      showTooltip: false,\r\n    },\r\n    numberFormat: '0',\r\n  },\r\n];\r\nexport default GetSearch3;\r\n"]},"metadata":{},"sourceType":"module"}